<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0"
  xml:base="https://circleci.com/"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>The CircleCI Blog Feed - CircleCI</title>
    <description>Stay up to date with the latest news, updates, and hacks from CircleCI.</description>
    <link>https://circleci.com/blog/</link>
    <atom:link href="https://circleci.com/blog/feed.xml" rel="self" type="application/rss+xml" />
    
      
      <item>
        <title>Create a continuous deployment pipeline for Django applications</title>
        <link>https://circleci.com/blog/django-deploy/</link>
        <pubDate>Tue, 10 Aug 2021 13:00:00 -0700</pubDate>
        <guid isPermaLink="true">https://circleci.com/blog/django-deploy/</guid>
        
          <dc:creator>Fikayo Adepoju</dc:creator>
        
        
          <description>&lt;p&gt;&lt;a href=&quot;https://www.djangoproject.com/&quot;&gt;Django&lt;/a&gt; is the most popular web development framework for the &lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt; programming language. Its design facilitates rapid development without compromising on the standards of professionally built applications. It is free, open source, uses the Model-View-Template architectural pattern, and encapsulates a lot of boilerplates to enable developers churn out web apps quickly.&lt;/p&gt;

&lt;p&gt;In this tutorial, you will learn and demonstrate how to create a deployment pipeline to continuously deploy your Django apps to a hosting environment.&lt;/p&gt;

&lt;h2&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;To follow this post, a few things are required:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Basic knowledge of the Python programming language&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.python.org/&quot;&gt;Python&lt;/a&gt; (version &amp;gt;= 3) installed on your system and updated&lt;/li&gt;
  &lt;li&gt;A &lt;a href=&quot;https://heroku.com/&quot;&gt;Heroku&lt;/a&gt; account&lt;/li&gt;
  &lt;li&gt;A &lt;a href=&quot;https://circleci.com/signup&quot;&gt;CircleCI&lt;/a&gt; account&lt;/li&gt;
  &lt;li&gt;A &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; account&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With all these installed and set up, you can begin the tutorial.&lt;/p&gt;

&lt;h2&gt;Cloning and running the sample Django project&lt;/h2&gt;

&lt;p&gt;To get started, you will be cloning a simple Django project you can use for the deployment demonstration. To clone the project, run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone --single-branch --branch base-project https://github.com/CIRCLECI-GWP/cci-cd-django
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once cloned, go into the project root (&lt;code&gt;cd cd-django-site&lt;/code&gt;) and run the following command to start up the project with the local Python server:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;python manage.py runserver
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will boot up the server and run the application at the address &lt;code&gt;http://localhost:8000&lt;/code&gt;. Load this address in your browser.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-02.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Site Run - Local&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-02.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-02.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-02.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-02.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-02.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-02.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-02.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-02.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-02.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-02.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-02.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-02.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-02.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-02.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-02.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;Creating a Heroku App&lt;/h2&gt;

&lt;p&gt;Your next step is to set up a Heroku application to host the application. Go to your &lt;a href=&quot;https://dashboard.heroku.com&quot;&gt;Heroku dashboard&lt;/a&gt; and click &lt;strong&gt;New&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Create new app&lt;/strong&gt;. Enter a name for the new application.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-heroku-new-app.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;New App - Heroku&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-heroku-new-app.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-heroku-new-app.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-heroku-new-app.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-heroku-new-app.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-heroku-new-app.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-heroku-new-app.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-heroku-new-app.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-heroku-new-app.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-heroku-new-app.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-heroku-new-app.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-heroku-new-app.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-heroku-new-app.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-heroku-new-app.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-heroku-new-app.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-heroku-new-app.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Make a note of the name you just entered. You will need this later on in the tutorial. Next, locate your Heroku API key in the &lt;a href=&quot;https://dashboard.heroku.com/account&quot;&gt;&lt;code&gt;Account Settings&lt;/code&gt;&lt;/a&gt; section of your dashboard. You will also need this later in the tutorial.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-account-settings.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Account Settings - Heroku&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-account-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-account-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-account-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-account-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-account-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-account-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-account-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-account-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-account-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-account-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-account-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-account-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-account-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-account-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-account-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;Setting up a CircleCI project for deployment&lt;/h2&gt;

&lt;p&gt;To begin this process, you first need to &lt;a href=&quot;https://circleci.com/blog/pushing-a-project-to-github/&quot;&gt;push the project to a remote repository on GitHub&lt;/a&gt;. Make sure that this is the GitHub account connected to your CircleCI account.&lt;/p&gt;

&lt;p&gt;Next, go to the Projects page (click &lt;strong&gt;Projects&lt;/strong&gt; on the vertical menu on the right) on the CircleCI dashboard. Add the project.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-01.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Add Project - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-01.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-01.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-01.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-01.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-01.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-01.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-01.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-01.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-01.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-01.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-01.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-01.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-01.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-01.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-01.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Set Up Project&lt;/strong&gt; to begin. Click &lt;strong&gt;Skip this step&lt;/strong&gt; on the modal that pops up. We will be manually adding our CircleCI config later in this tutorial.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-07.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Add Config - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-07.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-07.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-07.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-07.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-07.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-07.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-07.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-07.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-07.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-07.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-07.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-07.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-07.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-07.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-07.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the Setup page, click &lt;strong&gt;Use Existing Config&lt;/strong&gt; to indicate that you are adding a configuration file manually and not using the sample displayed. Next, you get a prompt to either download a configuration file for the pipeline or start building.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Build Prompt - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Start Building&lt;/strong&gt;. This build will fail because we have not set up our configuration file yet.&lt;/p&gt;

&lt;p&gt;The final thing we need to do on the CircleCI console is to set up environment variables for the project we just added. This will enable our project to have authenticated access to our Heroku application for deployments.&lt;/p&gt;

&lt;p&gt;Go to your project’s settings by clicking the &lt;strong&gt;Project Settings&lt;/strong&gt; button on the Pipelines page. Make sure your project is the one that is selected.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-project-settings.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Project settings - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-project-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-project-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-project-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-project-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-project-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-project-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-project-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-project-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-project-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-project-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-project-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-project-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-project-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-project-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-project-settings.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Back on the Project Settings page, click &lt;strong&gt;Environment Variables&lt;/strong&gt; on the side menu.&lt;/p&gt;

&lt;p&gt;On the Environment Variables page, click &lt;strong&gt;Add Environment Variable&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-add-environment-variable.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Add Environment variable - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-add-environment-variable.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-add-environment-variable.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-add-environment-variable.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-add-environment-variable.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-add-environment-variable.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-add-environment-variable.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-add-environment-variable.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-add-environment-variable.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-add-environment-variable.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-add-environment-variable.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-add-environment-variable.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-add-environment-variable.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-add-environment-variable.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-add-environment-variable.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-add-environment-variable.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Add the following environment variables:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code&gt;HEROKU_APP_NAME&lt;/code&gt; is the name of your Heroku application (in this case the name is &lt;code&gt;cci-cd-django&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;code&gt;HEROKU_API_KEY&lt;/code&gt; is your Heroku account API key. You can copy and paste it from Heroku’s account page.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that you have added environment variables, you have everything set up on your CircleCI console for deployment to Heroku.&lt;/p&gt;

&lt;h2&gt;Automating the deployment of the Django app&lt;/h2&gt;

&lt;p&gt;To finalize the process, you will need to set up the Django project for deployment on Heroku.&lt;/p&gt;

&lt;p&gt;Begin by installing the &lt;a href=&quot;https://gunicorn.org/&quot;&gt;Gunicorn&lt;/a&gt; web server for Python. Gunicorn is Heroku’s preferred server for running Django apps in production. At the root of the project, install Gunicorn by running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install gunicorn
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next, install &lt;code&gt;psycopg2&lt;/code&gt;, which is the Postgres adapter for Python applications. Enter this command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install psycopg2-binary
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;For a successful deployment, Heroku also requires the &lt;code&gt;django-heroku&lt;/code&gt; package to be installed and configured. Install this package by running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip install django-heroku
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When the installation is complete, import this latest package at the top of the &lt;code&gt;my_django_project/settings.py&lt;/code&gt; file. Place it just below the line &lt;code&gt;from pathlib import Path&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;import django_heroku
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then at the bottom of the file, add the following line:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;django_heroku.settings(locals())
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With all dependencies installed, update the &lt;code&gt;requirements.txt&lt;/code&gt; file that tracks all dependencies. Enter this command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;pip freeze &amp;gt; requirements.txt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the command above, &lt;code&gt;pip freeze&lt;/code&gt; is used to get all the dependencies into the project and send the output of this command into the &lt;code&gt;requirements.txt&lt;/code&gt; file. This step is required by Heroku.&lt;/p&gt;

&lt;p&gt;Next, create a file named &lt;a href=&quot;https://devcenter.heroku.com/articles/procfile&quot;&gt;&lt;code&gt;Procfile&lt;/code&gt;&lt;/a&gt; at the root of the project (Heroku apps include a Procfile that specifies the commands that are executed by the app on startup) and add the following line:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;web: gunicorn my_django_project.wsgi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command instructs Heroku to run the application using the &lt;code&gt;gunicorn&lt;/code&gt; server. You now have everything in place to make sure that the Django application is successfully deployed to Heroku.&lt;/p&gt;

&lt;p&gt;Now you can write the continuous deployment pipeline script that will ship the project from your local environment to Heroku’s remote hosting environment.&lt;/p&gt;

&lt;p&gt;At the root of your project, create a folder named &lt;code&gt;.circleci&lt;/code&gt; with a file named &lt;code&gt;config.yml&lt;/code&gt; inside it. In &lt;code&gt;config.yml&lt;/code&gt;, enter this code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;version: 2.1
orbs:
  heroku: circleci/heroku@0.0.10
workflows:
  heroku_deploy:
    jobs:
      - heroku/deploy-via-git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this configuration, the Heroku orb &lt;code&gt;circleci/heroku@0.0.10&lt;/code&gt; is imported, which automatically gives access to a set of Heroku jobs and commands that enable ease-of-use of the &lt;a href=&quot;https://devcenter.heroku.com/articles/heroku-cli&quot;&gt;Heroku toolbelt&lt;/a&gt;. One of these jobs is the &lt;code&gt;heroku/deploy-via-git&lt;/code&gt;, which deploys your application straight from your GitHub repo to your Heroku account. This job already takes care of installing the Heroku CLI, installing project dependencies, and deploying the application. It also picks up your environment variables to facilitate a smooth deployment to Heroku.&lt;/p&gt;

&lt;p&gt;Commit all changes to the project and push to your remote GitHub repository. This will automatically trigger the deployment pipeline.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Build Successful - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Success! Next, click the build (&lt;strong&gt;heroku/deploy-via-git&lt;/strong&gt;), for details about the deployment.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Build Details - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-django-deploy-04.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Getting that successful build is great, but you need to confirm that your app actually works error-free on Heroku. To do that, visit your Heroku-assigned application URL. The URL should be in the format &lt;code&gt;https://[APP_NAME].herokuapp.com&lt;/code&gt;. For this tutorial, the URL is: &lt;code&gt;https://cci-cd-django.herokuapp.com/&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-site-live.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Site Live - Heroku&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-08-09-site-live.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-site-live.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-site-live.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-site-live.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-site-live.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-site-live.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-site-live.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-site-live.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-site-live.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-site-live.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-site-live.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-site-live.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-site-live.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-site-live.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-08-09-site-live.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Fantastic!&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Python developers love working with Django because of its feature-rich nature and easy-to-use API. Python itself is a developer-friendly language and Django makes using Python for web apps a great choice. If your team makes use of these tools, let them know about what you have learned in this tutorial. The many benefits of using a continuous deployment pipeline to automatically deploy your Django applications only increase when other team members have access to the information. Make deployments to Heroku one less thing for your team to worry about.&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/coderonfleek?lang=en&quot;&gt;Fikayo Adepoju&lt;/a&gt; is a full-stack developer, technical writer, and tech content creator proficient in Web and Mobile technologies and DevOps, with over ten (10) years experience developing scalable distributed applications. With over 40 articles written for CircleCI, Twilio, Auth0, and The New Stack blogs and also on his personal Medium page, he loves to share his knowledge to as many developers as would benefit from it. You can also check out his video courses on &lt;a href=&quot;https://www.udemy.com/user/fikayo-adepoju/&quot;&gt;Udemy&lt;/a&gt;.&lt;/p&gt;
</description>
        
      </item>
    
      
      <item>
        <title>Prevent XSS attacks with browser testing</title>
        <link>https://circleci.com/blog/xss-attacks/</link>
        <pubDate>Fri, 06 Aug 2021 13:00:00 -0700</pubDate>
        <guid isPermaLink="true">https://circleci.com/blog/xss-attacks/</guid>
        
          <dc:creator>Fikayo Adepoju</dc:creator>
        
        
          <description>&lt;p&gt;Security is a never-ending battle on the web. You can have a server up in just a few minutes, and the next minute, someone is already trying to hack into it. These attacks could be automated using malicious bots or launched manually. Websites can be targeted by a malicious user trying to compromise your web presence or data. &lt;a href=&quot;https://owasp.org/www-community/attacks/xss/&quot;&gt;Cross-site scripting (XSS)&lt;/a&gt; is just one type of attack your site may be vulnerable to.&lt;/p&gt;

&lt;p&gt;In an XSS attack, a user exploits loopholes in data entry points in your applications. The attack targets form fields or the address bar to inject scripted code into your application, forcing it to run the malicious code. These attacks can cause sensitive cookie information to be leaked or they can run a script on your webpage that injects foreign elements into your page.&lt;/p&gt;

&lt;p&gt;In this tutorial, you will learn and demonstrate how to prevent such XSS attacks on your web pages using browser testing.&lt;/p&gt;

&lt;h2&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;To follow along with this tutorial a few things are required:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Basic knowledge of JavaScript&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://nodejs.org&quot;&gt;Node.js&lt;/a&gt; installed on your system (version &amp;gt;= 11)&lt;/li&gt;
  &lt;li&gt;A &lt;a href=&quot;https://circleci.com/&quot;&gt;CircleCI&lt;/a&gt; account&lt;/li&gt;
  &lt;li&gt;A &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; account&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Cloning and running the sample application&lt;/h2&gt;

&lt;p&gt;To begin, you will need to clone the demo application that will be tested for XSS attacks. Run the following command to get the code on your system:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone --single-branch --branch base-project https://github.com/coderonfleek/xss-attacks.git
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Once the app is cloned, go into the root of the project (&lt;code&gt;cd xss-attacks&lt;/code&gt;) and install dependencies by running:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With the dependencies fully installed, run the application:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;node server
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will boot up the application server at &lt;code&gt;http://localhost:5000&lt;/code&gt;. Navigate to this URL on your browser.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-app-load.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Homepage - Demo App&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-app-load.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-app-load.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-app-load.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-app-load.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-app-load.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-app-load.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-app-load.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-app-load.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-app-load.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-app-load.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-app-load.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-app-load.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-app-load.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-app-load.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-app-load.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This page consists of a form and column for information display on the right side. When you fill in the form and press Enter, your email appears in the &lt;code&gt;Details&lt;/code&gt; box.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-safe-email-entry.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Fill form - Demo App&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-safe-email-entry.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-safe-email-entry.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-safe-email-entry.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-safe-email-entry.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-safe-email-entry.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-safe-email-entry.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-safe-email-entry.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-safe-email-entry.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-safe-email-entry.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-safe-email-entry.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-safe-email-entry.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-safe-email-entry.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-safe-email-entry.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-safe-email-entry.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-safe-email-entry.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;Manually testing for XSS attacks&lt;/h2&gt;

&lt;p&gt;When the form is submitted, the information is submitted to an endpoint (&lt;code&gt;/sendinfo&lt;/code&gt;) on the server behind the scenes. This endpoint sends the email back in a &lt;code&gt;json&lt;/code&gt; response body which is then picked up by the page and displayed in the Details section. Displaying the email shows that data entered in the form made it to the backend and has been returned back to the page. A malicious user can easily take advantage of this process by entering corrupt data into the email field. For example, instead of entering a valid email into the email field, enter the HTML markup for a file field:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;input type=&quot;file&quot; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Fill the password field and click &lt;code&gt;Submit&lt;/code&gt;. The details section looks much different.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-xss-attack.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Attacked Page - Demo App&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-xss-attack.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-xss-attack.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-xss-attack.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-xss-attack.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-xss-attack.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-xss-attack.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-xss-attack.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-xss-attack.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-xss-attack.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-xss-attack.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-xss-attack.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-xss-attack.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-xss-attack.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-xss-attack.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-xss-attack.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The data that has been input has caused a new HTML element, a file input field, to be displayed on the page. This is definitely unwanted and could be dangerous if it is well positioned. An attacker could use this strategy to embed malicious data (or scripts) in your forms. Placing a hidden input field within your form could cause the form to submit the compromising data, along with its payload, to your server. This can lead to serious damage and compromise data integrity. You will want to catch such a vulnerability before someone takes advantage. One effective way of doing that is through browser testing.&lt;/p&gt;

&lt;h2&gt;Installing Jest and Puppeteer&lt;/h2&gt;

&lt;p&gt;Browser testing lets you run tests against web pages by interacting with them just like a regular user would. This allows you test different data entry scenarios to find and fix any vulnerabilities a hacker might try to explore.&lt;/p&gt;

&lt;p&gt;To set up automated browser tests, you will need two packages.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jestjs.io/&quot;&gt;Jest&lt;/a&gt; will be used as the test runner for the test suites.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://pptr.dev/&quot;&gt;Puppeteer&lt;/a&gt; would be used to write the browser tests.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Install these packages by running this command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install --save-dev jest puppeteer
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With these packages installed, you can now begin writing tests for your browser.&lt;/p&gt;

&lt;h2&gt;Adding tests for the browser&lt;/h2&gt;

&lt;p&gt;In this section, you will write a test suite to test your browser to detect the email input vulnerability. If the vulnerability is found, the test will fail. A failed test indicates that there is a loophole in your email field that needs to be addressed to avoid XSS attacks.&lt;/p&gt;

&lt;p&gt;The test you will write will perform the same attack you performed manually in the previous section. Create the test file &lt;code&gt;login.test.js&lt;/code&gt; and enter this code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;const puppeteer = require(&quot;puppeteer&quot;);

test(&quot;Check for XSS attack on email field&quot;, async () =&amp;gt; {
  const browser = await puppeteer.launch();
  try {
    const page = await browser.newPage();

    await page.goto(&quot;http://localhost:5000&quot;);

    await page.type(&quot;#userEmail&quot;, '&amp;lt;input type=&quot;file&quot; /&amp;gt;');
    await page.type(&quot;#userPassword&quot;, &quot;password&quot;);
    await page.click(&quot;#submitButton&quot;);

    let emailContainer = await page.$(&quot;#infoDisplay&quot;);
    let value = await emailContainer.evaluate((el) =&amp;gt; el.textContent);

    expect(value.length).toBeGreaterThan(0);
  } finally {
    await browser.close();
  }
}, 120000);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the test file above, the &lt;code&gt;Check for XSS attack on email field&lt;/code&gt; test case uses Puppeteer to launch a browser instance which then loads the application at the URL &lt;code&gt;http://localhost:5000&lt;/code&gt;. Once the app is running, the email field is filled using the input file markup. The password field is also filled. The &lt;code&gt;Submit&lt;/code&gt; button is clicked, and once the form is submitted, the display section is checked for a string with length greater than zero (non-text HTML elements will return a string with a length of zero). Once the test is done running, close the browser.&lt;/p&gt;

&lt;p&gt;Now you have the test in place to check for an attack. To complete the test setup, add a &lt;code&gt;test&lt;/code&gt; script to the &lt;code&gt;package.json&lt;/code&gt; file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;...
&quot;scripts&quot; : {
    &quot;test&quot; : &quot;jest&quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Make sure that your app is currently running using &lt;code&gt;node server.js&lt;/code&gt; and run the test file:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm run test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This test will fail because, as we already know, the vulnerability does exist. Here is what the CLI output shows.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; FAIL  ./login.test.js (5.475 s)
  ✕ Check for XSS attack on email field (2096 ms)

  ● Check for XSS attack on email field

    expect(received).toBeGreaterThan(expected)

    Expected: &amp;gt; 0
    Received:   0

      23 |   let value = await emailContainer.evaluate(el =&amp;gt; el.textContent);
      24 |
    &amp;gt; 25 |   expect(value.length).toBeGreaterThan(0);
         |                        ^
      26 |
      27 | }, 120000);
      28 |

      at Object.&amp;lt;anonymous&amp;gt; (login.test.js:25:24)

Test Suites: 1 failed, 1 total
Tests:       1 failed, 1 total
Snapshots:   0 total
Time:        14.582 s
Ran all test suites.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Fixing the XSS vulnerability&lt;/h2&gt;

&lt;p&gt;One effective fix to XSS vulnerability is to make sure that data being entered into the application is validated before any form of processing is done with it. Data validation can be done on both the client and server ends of the application. For this application, you will be validating the email received on the server side to ensure that only safe text is returned back to the client.&lt;/p&gt;

&lt;p&gt;Locate the &lt;code&gt;server.js&lt;/code&gt;. The &lt;code&gt;/sendinfo&lt;/code&gt; endpoint shows that the email is returned to the client without validation:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;app.post(&quot;/sendinfo&quot;, (req, res) =&amp;gt; {
  const email = req.body.email;

  res.send({ email });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now, replace this endpoint with this code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;app.post(&quot;/sendinfo&quot;, (req, res) =&amp;gt; {
  let email = req.body.email;

  if (!validEmail(email)) {
    email = &quot;Enter a Valid Email e.g test@company.com&quot;;
  }

  res.send({ email });
});

function validEmail(mail) {
  return /^[a-zA-Z0-9.!#$%&amp;amp;'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$/.test(
    mail
  );
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the new code, a &lt;code&gt;validEmail&lt;/code&gt; function takes in a string and returns a boolean based on the string being a valid email or not. This function is then used in the &lt;code&gt;/sendinfo&lt;/code&gt; to validate the email sent by the client. If the email is valid, it is returned back to the client. If it is not valid, a message is sent instead that prompts the user to enter a valid email.&lt;/p&gt;

&lt;p&gt;With the &lt;code&gt;server.js&lt;/code&gt; code changed, restart the application again by killing it (&lt;code&gt;Ctrl + C&lt;/code&gt;) and restarting it (&lt;code&gt;node server.js&lt;/code&gt;). You can do a manual test first by refreshing the browser and retrying the attack. This displays a validation message instead of the input field.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-successful-manual-test.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Successful Manual Test - Demo App&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-successful-manual-test.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-successful-manual-test.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-successful-manual-test.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-successful-manual-test.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-successful-manual-test.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-successful-manual-test.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-successful-manual-test.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-successful-manual-test.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-successful-manual-test.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-successful-manual-test.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-successful-manual-test.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-successful-manual-test.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-successful-manual-test.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-successful-manual-test.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-successful-manual-test.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now run the test suite with the command &lt;code&gt;npm run test&lt;/code&gt;. The test will pass as shown by the console output.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt; PASS  ./login.test.js (6.953 s)
  ✓ Check for XSS attack on email field (3887 ms)

Test Suites: 1 passed, 1 total
Tests:       1 passed, 1 total
Snapshots:   0 total
Time:        16.258 s
Ran all test suites.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Automating the testing process&lt;/h2&gt;

&lt;p&gt;The main aim of this exercise is to automate the browser testing process so that the XSS vulnerabilities can be caught before they make their way into your production code.&lt;/p&gt;

&lt;p&gt;To begin the process, you first need to &lt;a href=&quot;https://circleci.com/blog/pushing-a-project-to-github/&quot;&gt;push your code to GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next, go to the &lt;code&gt;Projects&lt;/code&gt; page on the CircleCI dashboard to add the project.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-add-project.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Add Project - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Set Up Project&lt;/strong&gt; to begin setting up the project. Click on &lt;strong&gt;Skip this step&lt;/strong&gt; on the modal that pops up. We will be manually adding our CircleCI config later in this tutorial.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-add-config.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Add Config - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the Setup page, click &lt;strong&gt;Use Existing Config&lt;/strong&gt; to indicate that we will be adding a configuration file manually and not using the sample displayed. Next, you get a prompt to either download a configuration file for the pipeline or start building.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Build Prompt - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Start Building&lt;/strong&gt; to begin. This build will fail because we have not set up our configuration file yet. We will complete this step later.&lt;/p&gt;

&lt;p&gt;Finally, create a deployment script for CircleCI that builds a deployment automation pipeline by running the browser tests. At the root of your project, create a folder named &lt;code&gt;.circleci&lt;/code&gt; with a file named &lt;code&gt;config.yml&lt;/code&gt; in it. Inside &lt;code&gt;config.yml&lt;/code&gt;, enter this code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;version: 2.1
jobs:
  build:
    working_directory: ~/repo
    docker:
      - image: circleci/node:12-browsers
    steps:
      - checkout
      - run:
          name: Update NPM
          command: &quot;sudo npm install -g npm&quot;
      - restore_cache:
          key: dependency-cache-{{ checksum &quot;package-lock.json&quot; }}
      - run:
          name: Install Dependencies
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum &quot;package-lock.json&quot; }}
          paths:
            - ./node_modules
      - run:
          name: Run the application
          command: node server.js
          background: true
      - run:
          name: Run tests
          command: npm run test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The script starts off by pulling in the required image and updating &lt;code&gt;npm&lt;/code&gt;. Dependencies are then installed and cached. To ensure that the browser tests run, the application is started in a background process. Once the app is up and running, the &lt;code&gt;test&lt;/code&gt; script is run to test it.&lt;/p&gt;

&lt;p&gt;Commit all changes to the project and push to your remote GitHub repository. This will automatically trigger the build pipeline and a successful build.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-build-successful.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Build Successful - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;build&lt;/strong&gt; to review the test details.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-build-details.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Build Details - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-04-12-build-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-04-12-build-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Having security checks built into your build process adds so much value to your code. It is not enough that code works and is not buggy; you must also make sure that it cannot be compromised. A security-driven development process like this can be extended to other parts of your code that involve user interaction to prevent malicious users from taking advantage of vulnerabilities in your code. Encourage your team members to use these steps to prevent XSS attacks in their code, too.&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/coderonfleek?lang=en&quot;&gt;Fikayo Adepoju&lt;/a&gt; is a LinkedIn Learning (Lynda.com) Author, Full-stack developer, technical writer and tech content creator proficient in Web and Mobile technologies and DevOps with over 10 years experience developing scalable distributed applications. With over 40 articles written for CircleCI, Twilio, Auth0 and The New Stack blogs and also on his personal Medium page, he loves to share his knowledge to as many developers as would benefit from it. You can also check out his video courses on &lt;a href=&quot;https://www.udemy.com/user/fikayo-adepoju/&quot;&gt;Udemy&lt;/a&gt;.&lt;/p&gt;
</description>
        
      </item>
    
      
      <item>
        <title>Automate your releases with CircleCI and the GitHub CLI orb</title>
        <link>https://circleci.com/blog/automating-your-releases-with-circleci-and-the-github-cli-orb/</link>
        <pubDate>Fri, 30 Jul 2021 09:00:00 -0700</pubDate>
        <guid isPermaLink="true">https://circleci.com/blog/automating-your-releases-with-circleci-and-the-github-cli-orb/</guid>
        
          <dc:creator>Kyle Tryon</dc:creator>
        
        
          <description>&lt;p&gt;Last year, GitHub announced the release of &lt;a href=&quot;https://github.blog/2020-09-17-github-cli-1-0-is-now-available/&quot;&gt;their new CLI tool&lt;/a&gt;. The new &lt;code&gt;gh&lt;/code&gt; CLI wraps around the standard &lt;code&gt;git&lt;/code&gt; cli and offers a suite of additional GitHub.com specific commands. These new commands include the ability to create a new &lt;em&gt;&lt;a href=&quot;https://docs.github.com/en/github/collaborating-with-issues-and-pull-requests/about-pull-requests&quot;&gt;pull request&lt;/a&gt;&lt;/em&gt; and to create a &lt;em&gt;&lt;a href=&quot;https://docs.github.com/en/github/administering-a-repository/managing-releases-in-a-repository&quot;&gt;release&lt;/a&gt;&lt;/em&gt; directly from your terminal.&lt;/p&gt;

&lt;p&gt;We here on the CircleCI Community and Partner Engineering team at CircleCI use the &lt;code&gt;gh pr checkout&lt;/code&gt; command all the time to safely test pull requests from the community (you!) on &lt;a href=&quot;https://github.com/CircleCI-Public?q=-orb&amp;amp;type=&amp;amp;language=&amp;amp;sort=&quot;&gt;our various orbs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Today we are sharing the new &lt;a href=&quot;https://circleci.com/developer/orbs/orb/circleci/github-cli&quot;&gt;GitHub CLI orb&lt;/a&gt;. You can now bring the power and flexibility of the GitHub CLI to your CI/CD pipeline.&lt;/p&gt;

&lt;h2&gt;What are orbs?&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://circleci.com/orbs/&quot;&gt;Orbs&lt;/a&gt; are reusable packages of CI configuration that can be used in your CircleCI config to automate and optimize CI tasks. With orbs you can &lt;a href=&quot;https://circleci.com/developer/orbs/orb/circleci/node#usage-node_test_and_deploy&quot;&gt;test and deploy a Node.js application&lt;/a&gt; or easily add &lt;a href=&quot;https://github.com/CircleCI-Public/slack-orb/wiki&quot;&gt;customizable Slack notifications to your CI pipeline&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now that the &lt;a href=&quot;https://circleci.com/developer/orbs/orb/circleci/github-cli&quot;&gt;GitHub CLI orb&lt;/a&gt; is available, we can show you how we  combine the power of CircleCI and GitHub to automate our test and release process.&lt;/p&gt;

&lt;h2&gt;Testing the code&lt;/h2&gt;

&lt;p&gt;The ultimate goal of our config is to have a CI/CD pipeline where code on any branch will always be tested. In this case, if we merge our changes to the &lt;code&gt;main&lt;/code&gt; branch, we want to then tag and release that update on GitHub.com.&lt;/p&gt;

&lt;p&gt;To begin, we will start with a sample config of a very simple Node.js project, on which we will run &lt;code&gt;npm run test&lt;/code&gt; on &lt;i&gt;every&lt;/i&gt; commit pushed to the repository, on all branches.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;version: '2.1'
orbs:
  node: circleci/node@4.3
workflows:
  test-and-release:
    jobs:
      - node/test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This config file contains a workflow &lt;code&gt;test-and-release&lt;/code&gt; containing a single &lt;code&gt;node/test&lt;/code&gt; job provided by the &lt;a href=&quot;https://circleci.com/developer/orbs/orb/circleci/node&quot;&gt;Node orb&lt;/a&gt;. This job automatically checks out our code, installs and caches our dependencies, and runs our &lt;code&gt;test&lt;/code&gt; npm script. If you want to see an example of what this job looks like in action, you can view this &lt;a href=&quot;https://app.circleci.com/pipelines/github/CircleCI-Public/node-orb/719/workflows/e17c4f8f-db71-4d92-9a60-9af2cdd2a377/jobs/4663&quot;&gt;live example in the CircleCI app&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, our tests are run for us automatically but when it comes time to issue a new release of our product, we will need to manually create a tag and release on GitHub.com. We can take advantage of the new GitHub CLI orb and our CircleCI config to automate this process.&lt;/p&gt;

&lt;h2&gt;Preparing GitHub authentication&lt;/h2&gt;
&lt;p&gt;For automatically creating tags and releases, we will use the GitHub CLI and token based authentication. First, we will create a GitHub token with the proper permissions, and then we will add the token to a &lt;a href=&quot;/docs/2.0/contexts/#creating-and-using-a-context&quot;&gt;CircleCI context&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;A context on CircleCI is a shared collection of environment variables that can be attached to various jobs in any project within an organization. This is useful when you need to share credentials (like GitHub authentication) between many projects. Contexts can even be &lt;a href=&quot;/docs/2.0/contexts/#restricting-a-context&quot;&gt;restricted&lt;/a&gt; to prevent jobs from accessing a context unless triggered by a user with the proper permissions.&lt;/p&gt;

&lt;p&gt;Begin by creating a &lt;a href=&quot;https://docs.github.com/en/github/authenticating-to-github/keeping-your-account-and-data-secure/creating-a-personal-access-token&quot;&gt;GitHub personal access token&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/GitHubScopesForGH-CLI-Orb.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Github persona access token scopes&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/GitHubScopesForGH-CLI-Orb.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/GitHubScopesForGH-CLI-Orb.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/GitHubScopesForGH-CLI-Orb.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/GitHubScopesForGH-CLI-Orb.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/GitHubScopesForGH-CLI-Orb.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/GitHubScopesForGH-CLI-Orb.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/GitHubScopesForGH-CLI-Orb.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/GitHubScopesForGH-CLI-Orb.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/GitHubScopesForGH-CLI-Orb.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/GitHubScopesForGH-CLI-Orb.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/GitHubScopesForGH-CLI-Orb.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/GitHubScopesForGH-CLI-Orb.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/GitHubScopesForGH-CLI-Orb.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/GitHubScopesForGH-CLI-Orb.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/GitHubScopesForGH-CLI-Orb.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The permission scopes needed for the GitHub CLI are &lt;code&gt;repo&lt;/code&gt; and &lt;code&gt;read:org&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Once you have your personal access token handy, head over to https://app.circleci.com/ and in the left vertical navigation bar, select the gear icon for &lt;code&gt;Organization Settings&lt;/code&gt;. This opens the contexts settings page. The URL will look something like this: &lt;code&gt;https://app.circleci.com/settings/organization/&amp;lt;VCS&amp;gt;/&amp;lt;Organization&amp;gt;/contexts&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Create Context&lt;/strong&gt; and give it a name. In our example we will use &lt;code&gt;GITHUB_CREDS&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Then, click &lt;strong&gt;Add Environment Variable&lt;/strong&gt; and add your token, using the name &lt;code&gt;GITHUB_TOKEN&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/AddGitHubTokenToContext.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Add Environment Variable UI window&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/AddGitHubTokenToContext.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/AddGitHubTokenToContext.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/AddGitHubTokenToContext.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/AddGitHubTokenToContext.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/AddGitHubTokenToContext.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/AddGitHubTokenToContext.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/AddGitHubTokenToContext.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/AddGitHubTokenToContext.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/AddGitHubTokenToContext.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/AddGitHubTokenToContext.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/AddGitHubTokenToContext.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/AddGitHubTokenToContext.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/AddGitHubTokenToContext.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/AddGitHubTokenToContext.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/AddGitHubTokenToContext.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;Automating the release&lt;/h2&gt;

&lt;p&gt;Begin by adding the GitHub CLI orb to your config:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;version: '2.1'
orbs:
  node: circleci/node@4.3
  gh: circleci/github-cli@1.0

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This gives us access to the various &lt;a href=&quot;https://circleci.com/docs/2.0/orb-concepts/?section=configuration#commands&quot;&gt;commands&lt;/a&gt; and &lt;a href=&quot;https://circleci.com/docs/2.0/orb-concepts/?section=configuration#jobs&quot;&gt;jobs&lt;/a&gt; offered by the GitHub CLI orb. Commands can be used in your custom jobs to set up and authenticate with the CLI for manual use, but in this example we will use the &lt;a href=&quot;https://circleci.com/developer/orbs/orb/circleci/github-cli#jobs-release&quot;&gt;&lt;em&gt;release&lt;/em&gt; job&lt;/a&gt; with some customized parameters and &lt;a href=&quot;https://circleci.com/docs/2.0/configuration-reference/#jobfilters&quot;&gt;filters&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Implementing a complete test and release workflow with the GitHub CLI orb&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;version: '2.1'
orbs:
  node: circleci/node@4.3
  gh: circleci/github-cli@1.0
workflows:
  test-and-release:
    jobs:
      - node/test
      - gh/release:
          notes-file: changelog.md
          tag: 1.0.0
          title: The initial release
          requires:
            - node/test
          context:
            - GITHUB_CREDS
          filters:
            branches:
              only:
                - main
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;You can see we have added the &lt;code&gt;gh/release&lt;/code&gt; job to our &lt;code&gt;test-and-release&lt;/code&gt; workflow with a number of customized parameters. You can view &lt;i&gt;all&lt;/i&gt; available parameters for the job on the &lt;a href=&quot;/developer/orbs/orb/circleci/github-cli?version=dev:alpha#jobs-release&quot;&gt;Orb Registry page&lt;/a&gt; for this orb job. This job automatically runs the &lt;code&gt;gh/setup&lt;/code&gt; command, which installs and authenticates the GitHub CLI, and then runs &lt;code&gt;gh release create&lt;/code&gt; with our specified parameters.&lt;/p&gt;

&lt;p&gt;Imagine you are working on the first major release of your product. For now, you are working in the &lt;code&gt;beta&lt;/code&gt; branch. When the &lt;i&gt;beta&lt;/i&gt; is complete, you plan to merge to &lt;code&gt;main&lt;/code&gt; and issue version &lt;code&gt;1.0.0&lt;/code&gt; of your release.&lt;/p&gt;

&lt;p&gt;Looking at the full example, we are providing the (required) &lt;code&gt;tag&lt;/code&gt; parameter to specify the intended release tag. If no such tag exists, the &lt;code&gt;gh cli&lt;/code&gt; will create a new tag using the latest code in the default branch, which in our case is &lt;code&gt;main&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There are three additional parameters shown here that are &lt;i&gt;not&lt;/i&gt; from the orb directly, so you will not see them on the Orb Registry docs. Parameters &lt;code&gt;requires&lt;/code&gt;, &lt;code&gt;context&lt;/code&gt;, and &lt;code&gt;filters&lt;/code&gt; are special job parameters available to any job on CircleCI natively.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;a href=&quot;/docs/2.0/configuration-reference/?section=configuration#requires&quot;&gt;&lt;code&gt;requires&lt;/code&gt; parameter&lt;/a&gt; specifies that this job (&lt;code&gt;gh/release&lt;/code&gt;) will not run until all jobs under &lt;code&gt;requires&lt;/code&gt; have completed successfully. In this case the job is &lt;code&gt;node/test&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;The &lt;a href=&quot;/docs/2.0/contexts/#creating-and-using-a-context&quot;&gt;context&lt;/a&gt; contains our shared environment variables. Here is where we can attach the &lt;code&gt;GITHUB_CREDS&lt;/code&gt; context we created earlier.&lt;/li&gt;
  &lt;li&gt;Filters limit the conditions under which a job will execute. Without any filters, all jobs in a workflow will always execute. With the filter applied in this example, our &lt;code&gt;gh/release&lt;/code&gt; job will run only if the job was triggered on the &lt;code&gt;main&lt;/code&gt; branch (when we merge).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This means that when we merge our change from &lt;code&gt;beta&lt;/code&gt; to &lt;code&gt;main&lt;/code&gt; in the config setup, the &lt;code&gt;1.0.0&lt;/code&gt; tag and release will be created from the new &lt;code&gt;HEAD&lt;/code&gt; of &lt;code&gt;main&lt;/code&gt; that contains our new changes.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/GitHubReleasesPageExample.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;GitHub Release page showing that a release has been created for version 1.0.0&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/GitHubReleasesPageExample.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/GitHubReleasesPageExample.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/GitHubReleasesPageExample.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/GitHubReleasesPageExample.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/GitHubReleasesPageExample.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/GitHubReleasesPageExample.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/GitHubReleasesPageExample.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/GitHubReleasesPageExample.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/GitHubReleasesPageExample.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/GitHubReleasesPageExample.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/GitHubReleasesPageExample.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/GitHubReleasesPageExample.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/GitHubReleasesPageExample.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/GitHubReleasesPageExample.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/GitHubReleasesPageExample.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In the example above, we used several additional parameters to specify the location of the changelog file, set the title, and more.&lt;/p&gt;

&lt;h2&gt;Wrapping up&lt;/h2&gt;
&lt;p&gt;After implementing the test and release workflow, we can just update our &lt;code&gt;.circleci/config.yml&lt;/code&gt; with each pull request to reflect the desired change. For example, if we were to open a new branch called &lt;code&gt;add-feature-blink&lt;/code&gt;, we would start our new branch by updating the config to reflect the intended release we want to prepare for when we are again ready to merge to &lt;code&gt;main&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;workflows:
  test-and-release:
    jobs:
      - node/test
      - gh/release:
          notes-file: changelog.md
          tag: 1.1.0
          title: &quot;Add Feature: Blinking text&quot;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Thank you for reading!&lt;/p&gt;

&lt;p&gt;Kyle Tryon @TechSquidTV&lt;/p&gt;

&lt;p&gt;View the &lt;a href=&quot;https://circleci.com/developer/orbs/orb/circleci/github-cli&quot;&gt;GitHub CLI orb&lt;/a&gt;.&lt;/p&gt;
</description>
        
      </item>
    
      
      <item>
        <title>Continuous integration for Rust applications</title>
        <link>https://circleci.com/blog/rust-ci/</link>
        <pubDate>Fri, 30 Jul 2021 09:00:00 -0700</pubDate>
        <guid isPermaLink="true">https://circleci.com/blog/rust-ci/</guid>
        
          <dc:creator>Fikayo Adepoju</dc:creator>
        
        
          <description>&lt;h2&gt;Introduction&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt; is a powerful language built on the promise of performance and reliability. With no runtime or garbage collector, it easily runs in any environment and can be integrated into any existing language or framework. With the advent of &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/WebAssembly&quot;&gt;WebAssembly&lt;/a&gt;. Rust has become even more valued in the web development space. Rust’s seamless peering with Node.js to build highly performant functionalities has made it a delight for web developers. Many web developers would rather write Rust than have to learn/write C++ or C for WebAssembly integrations.&lt;/p&gt;

&lt;p&gt;In this tutorial, you will learn and demonstrate how to automatically test Rust applications as you push updates and upgrades in your Rust applications to a remote repository.&lt;/p&gt;

&lt;h2&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;To follow along with the tutorial, a few things are required:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Basic knowledge of Rust&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.rust-lang.org/&quot;&gt;Rust&lt;/a&gt; installed on your system (find installation instructions &lt;a href=&quot;https://www.rust-lang.org/learn/get-started&quot;&gt;here&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;A &lt;a href=&quot;https://circleci.com/signup&quot;&gt;CircleCI&lt;/a&gt; account&lt;/li&gt;
  &lt;li&gt;A &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; account&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;With all these installed and set up, it is time to begin the tutorial.&lt;/p&gt;

&lt;h2&gt;Creating a new Rust project&lt;/h2&gt;

&lt;p&gt;If you have already installed Rust before starting this project, make sure you run &lt;code&gt;rustup update&lt;/code&gt; so your current installation is compatible. To begin, create a new Rust application by running this command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cargo new rust-testing
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This command quickly scaffolds a barebones Rust application inside the &lt;code&gt;rust-testing&lt;/code&gt; folder. You will build a simple CLI application that prompts the user for a name and prints a greeting message back to the CLI.&lt;/p&gt;

&lt;p&gt;Locate the file &lt;code&gt;src/main.rs&lt;/code&gt; and replace its content with this code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;fn main() {
    let mut line = String::new();
    println!(&quot;Please enter your name: &quot;);
    std::io::stdin().read_line(&amp;amp;mut line).unwrap();
    println!(&quot;{}&quot;, build_message(line));
}

fn build_message(name: String) -&amp;gt; String{
    let message = &quot;You are welcome &quot;.to_owned() + &amp;amp;name;
    return message;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the code above, a &lt;code&gt;build_message&lt;/code&gt; function is defined which takes in a &lt;code&gt;name&lt;/code&gt; argument of type &lt;code&gt;String&lt;/code&gt; and returns a greeting message constructed using the &lt;code&gt;name&lt;/code&gt; argument.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;main&lt;/code&gt; function prompts the user for a name. The name is then passed to the &lt;code&gt;build_message&lt;/code&gt; function and its return value printed out to the CLI output.&lt;/p&gt;

&lt;p&gt;Run this program by running the command below at the root of the project folder.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cargo run
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The application will prompt you for your name. Enter your name and hit the &lt;code&gt;Enter&lt;/code&gt; key to see the greeting message printed to the CLI screen as shown below.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Finished dev [unoptimized + debuginfo] target(s) in 0.00s
     Running `target/debug/rust-testing`
Please enter your name: 
Fikayo Adepoju
You are welcome Fikayo Adepoju
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Adding tests for the Rust application&lt;/h2&gt;

&lt;p&gt;One of the beauties of Rust is that it comes bundled with its own testing framework, and requires no additional setup. You will be writing a unit test for the &lt;code&gt;build_message&lt;/code&gt; function to assert its output. Unlike most other languages and frameworks that place tests in separate files, Rust actually encourages you to place your unit tests in the same file as the piece of code being tested.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;cargo test&lt;/code&gt; command for running tests in a Rust application will locate any function with the &lt;code&gt;#[test]&lt;/code&gt; attribute in the project and run it as a test case.&lt;/p&gt;

&lt;p&gt;Add this test case just below the &lt;code&gt;build_message&lt;/code&gt; function:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#[test]
fn test_build_message(){
    let name = String::from(&quot;Fikayo&quot;);

    assert_eq!(build_message(name), &quot;You are welcome Fikayo&quot;)
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this test, a &lt;code&gt;name&lt;/code&gt; variable is declared and assigned a &lt;code&gt;String&lt;/code&gt; value of &lt;code&gt;Fikayo&lt;/code&gt;. The next line then checks that the &lt;code&gt;build_message&lt;/code&gt; function returns the expected message for the argument passed in.&lt;/p&gt;

&lt;p&gt;To run this test, run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cargo test
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The test should run successfully. This is the output that will appear on your CLI:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;Compiling rust-testing v0.1.0 (/Users/stanmd/Projects/CCI/rust-testing)
    Finished test [unoptimized + debuginfo] target(s) in 0.63s
     Running target/debug/deps/rust_testing-5cffbb684dbc6899

running 1 test
test test_build_message ... ok

test result: ok. 1 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Connecting the Rust application to CircleCI&lt;/h2&gt;

&lt;p&gt;To begin the test automation process for your Rust project, you need to &lt;a href=&quot;https://circleci.com/blog/pushing-a-project-to-github/&quot;&gt;push the project to GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next, go to the Projects page on the &lt;a href=&quot;https://app.circleci.com/projects&quot;&gt;CircleCI dashboard&lt;/a&gt;. Select the appropriate GitHub account and add the project.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-03-17-add-project.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Add Project - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-03-17-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Set Up Project&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-03-17-add-config.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Add Config - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-03-17-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-add-config.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the setup page, click &lt;strong&gt;Use Existing Config&lt;/strong&gt; to indicate that you are setting up a configuration file manually and not using the sample displayed. Next, you get a prompt to either download a configuration file for the pipeline or to start building.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-03-17-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Build Prompt - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-03-17-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-start-building-prompt.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Start Building&lt;/strong&gt;. This build will fail because you have not set up your configuration file yet. We will build this file in the next step.&lt;/p&gt;

&lt;h2&gt;Automating tests for the Rust application&lt;/h2&gt;

&lt;p&gt;Time to write the continuous integration script that will automate the running of tests in the project any time updates are pushed to the remote code repository.&lt;/p&gt;

&lt;p&gt;At the root of your project, create a folder named &lt;code&gt;.circleci&lt;/code&gt; and add a file named &lt;code&gt;config.yml&lt;/code&gt; to it. Inside &lt;code&gt;config.yml&lt;/code&gt;, enter this code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;version: 2.1

jobs:
  build:
    docker:
      - image: cimg/rust:1.50.0
    steps:
      - checkout
      - run: cargo --version
      - run:
          name: Run Tests
          command: &quot;cargo test&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This code pulls in the &lt;a href=&quot;https://circleci.com/developer/images/image/cimg/rust&quot;&gt;CircleCI Rust image&lt;/a&gt; &lt;code&gt;cimg/rust:1.50.0&lt;/code&gt;. This image gives you access to all CLI commands available for a Rust installation.&lt;/p&gt;

&lt;p&gt;The code is then pulled from the remote repository and the step labelled &lt;code&gt;Run Tests&lt;/code&gt; uses the &lt;code&gt;cargo test&lt;/code&gt; command to run tests contained in the project.&lt;/p&gt;

&lt;p&gt;Commit all changes to the project and push to your remote GitHub repository. The integration pipeline is triggered, and you should have a successful build.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-03-17-build-successful.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Build Successful - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-03-17-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-build-successful.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click the build job for details about the deployment.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-03-17-test-details.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Build Details - CircleCI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-03-17-test-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-test-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-test-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-test-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-test-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-test-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-test-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-test-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-test-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-test-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-test-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-test-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-test-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-test-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-03-17-test-details.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now, each time you change your code, either by adding more features or more tests, and then push to your remote repository, your tests will automatically run. You will be alerted if your build failed due to a broken piece of code.&lt;/p&gt;

&lt;p&gt;Smooth!&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In this tutorial, you have learned and demonstrated how to automate tests in your Rust projects using a continuous integration pipeline. To expand your knowledge, learn how to &lt;a href=&quot;https://circleci.com/blog/rust-cd/&quot;&gt;continously deploy Rust applications&lt;/a&gt;. From start to finish, you can increase the value of Rust for your team so you can build better apps, faster.&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/coderonfleek?lang=en&quot;&gt;Fikayo Adepoju&lt;/a&gt; is a Full-stack developer, technical writer, and tech content creator proficient in Web and Mobile technologies and DevOps with over 10 years experience developing scalable distributed applications. With over 40 articles written for CircleCI, Twilio, Auth0, and The New Stack blogs and also on his personal Medium page, he loves to share his knowledge to as many developers as would benefit from it. You can also check out his video courses on &lt;a href=&quot;https://www.udemy.com/user/fikayo-adepoju/&quot;&gt;Udemy&lt;/a&gt;.&lt;/p&gt;
</description>
        
      </item>
    
      
      <item>
        <title>How to sell your manager on CI/CD</title>
        <link>https://circleci.com/blog/how-to-sell-your-team-on-ci-cd/</link>
        <pubDate>Fri, 30 Jul 2021 06:00:00 -0700</pubDate>
        <guid isPermaLink="true">https://circleci.com/blog/how-to-sell-your-team-on-ci-cd/</guid>
        
          <dc:creator>Linda Byrne</dc:creator>
        
        
          <description>&lt;p&gt;Continuous integration seems like a smart choice, right? Why would anyone think that integrating your code into the product as soon as possible is a bad idea?&lt;/p&gt;

&lt;p&gt;Let me take you back to August 2000, when a fresh-faced young engineer was starting her first engineering role. She was given a desk, a computer, and a detailed project plan that included a release date three months in the future. As she was writing the code, the QA engineers were busy writing up test plans in preparation for a release candidate to be ready.&lt;/p&gt;

&lt;p&gt;After four months of hard work, the engineer and her team sent their code to the CD-ROM factory that would print CD-ROMs to send to customers. Many customers were eagerly waiting for this new version of the software. It had been eight months since the last update, and the bug they reported six months ago was starting to irk them.&lt;/p&gt;

&lt;p&gt;The story above is a (mostly) true account of my introduction to software engineering. At the time, the cost of updating the software was huge. It involved long testing cycles and a lot of hard work to make the documentation accurate — screenshots could quickly become out of date but the documentation couldn’t be updated after the software had already been released.&lt;/p&gt;

&lt;p&gt;Making a change to a product was hard and the cost of making a mistake was high.&lt;/p&gt;

&lt;h2&gt;The CI/CD differentiator&lt;/h2&gt;

&lt;p&gt;Today, things are very different, largely thanks to continuous integration and continuous delivery (CI/CD).&lt;/p&gt;

&lt;p&gt;It’s hard to overstate the powerful impact of being able to make changes in the product as soon as they are ready. The feedback loop between engineers and customers is much shorter, and as engineers, we can respond to customer feedback in a way that puts the customer first.&lt;/p&gt;

&lt;p&gt;Lowering the cost of delivering changes to the customer means that we can quickly roll back any errors we’ve introduced. It also means having a lot more confidence in delivering changes that might have seemed risky before. Introducing changes one at a time also helps avoid those hard-to-detect errors that come from pushing two features together at the last minute.&lt;/p&gt;

&lt;p&gt;The fact that you can achieve a higher quality product by continuously making changes might seem counterintuitive but in reality, it’s the only way to improve.&lt;/p&gt;

&lt;p&gt;So, what do you say to a manager who is skeptical of CI/CD? Here are some potential answers to questions that your manager may ask:&lt;/p&gt;

&lt;h2&gt;What is &lt;a href=&quot;https://circleci.com/continuous-integration/&quot;&gt;continuous integration&lt;/a&gt;?&lt;/h2&gt;

&lt;p&gt;Careful not to scare your manager here by saying something along the lines of “putting code into production as fast as humanly possible!”&lt;/p&gt;

&lt;p&gt;This could be read as putting unfinished or broken features in front of customers, which is not the case at all. A good answer could be something along the lines of, “&lt;a href=&quot;https://circleci.com/continuous-integration/&quot;&gt;continuous integration&lt;/a&gt; is breaking our work up into small pieces, sharing our work with our peers, and QA-ing frequently.”&lt;/p&gt;

&lt;h2&gt;What does CI/CD cost?&lt;/h2&gt;

&lt;p&gt;The cost to move to CI/CD depends on how much you’re willing to invest in great automated testing. Because of that, the cost varies depending on how far along you are in your testing journey. If you’re doing most or all of your testing manually, the cost may be higher than if you have a rich suite of automated tests including end-to-end tests.&lt;/p&gt;

&lt;p&gt;It’s easy to make a case for investment in automated testing. Running automated tests on a CI tool costs far less and is more reliable than paying an engineer to do the same thing. Be aware though that you’re asking your manager to offset this value against feature delivery, which can be a hard decision. Expect that your manager will want to add automated testing incrementally and potentially add a manual QA step before deployment — a step many teams have taken in order to achieve CI/CD.&lt;/p&gt;

&lt;p&gt;Life Pro Tip: if your manager asks you about the price of CI/CD and you answer with how many quarters it will cost the team, they will take you much more seriously.&lt;/p&gt;

&lt;h2&gt;What are the benefits of investing in CI/CD?&lt;/h2&gt;

&lt;p&gt;While I’m sure that every manager is invested in the happiness of their engineers — I know I am — very few managers can afford to dedicate a significant amount of time exclusively to making their engineers happy. Yes, CI/CD is a great investment because it makes your developer’s job more enjoyable, but engineer happiness is simply a side-effect of a great business decision.&lt;/p&gt;

&lt;p&gt;There are also many benefits of CI/CD that go beyond engineer happiness and truly justify the investment.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;It is much easier for more than one team member to work on the same feature.&lt;/li&gt;
  &lt;li&gt;The cost of merging small changes is much lower than large changes.&lt;/li&gt;
  &lt;li&gt;Team members can evaluate their peer’s changes in a system that has passed automated testing rather than the moving target of a feature branch.&lt;/li&gt;
  &lt;li&gt;It is much easier for QA engineers to validate small changes iteratively in a consistent system, so detecting the source of errors becomes much simpler.&lt;/li&gt;
  &lt;li&gt;Features can get into the hands of customers in an earlier state. This means that if we’re on the wrong track, we can change direction after only a small investment.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2&gt;Align with leadership values to get a ‘yes’ on CI/CD&lt;/h2&gt;

&lt;p&gt;As engineers, we know that CI/CD makes sense. It means that code quality is higher and features are delivered faster. It introduces a confidence in our production code that doesn’t exist when features are integrated and delivered long after they’re written.&lt;/p&gt;

&lt;p&gt;To some managers, this can feel unintuitive. In order to get your manager on board with CI/CD, you’ll need to use the language and ideas that align with their values. I hope this article can provide a good starting point.&lt;/p&gt;

</description>
        
      </item>
    
      
      <item>
        <title>Security scans with Snyk in a CircleCI workflow</title>
        <link>https://circleci.com/blog/security-with-snyk-in-the-circleci-workflow/</link>
        <pubDate>Thu, 29 Jul 2021 04:20:00 -0700</pubDate>
        <guid isPermaLink="true">https://circleci.com/blog/security-with-snyk-in-the-circleci-workflow/</guid>
        
          <dc:creator>Tomás Gonzalez</dc:creator>
        
        
          <description>&lt;p&gt;Today’s applications are built using modern DevOps processes, with frequent integration and deployments several times a day. To enable pace and scale, application security must start with developers, with security teams moving from an audit and gate function to an empowering and governing role.&lt;/p&gt;

&lt;h2&gt;Securing cloud-native applications&lt;/h2&gt;

&lt;p&gt;Applications have changed as cloud-native technologies like containers, Kubernetes, and Terraform have replaced infrastructure with code. These elements are now built and customized by developers and live in their repositories.&lt;/p&gt;

&lt;p&gt;Securing cloud-native applications requires shifting the ownership of these application components, traditionally part of IT security, into the application security model. As developers take ownership of the first steps in security, security testing tools that integrate into their workflows and present information in a developer-friendly way become essential to their productivity.&lt;/p&gt;

&lt;h2&gt;Getting started with Snyk&lt;/h2&gt;
&lt;p&gt;The Snyk orb makes it easy for DevSecOps teams to integrate testing into CircleCI workflows. With the Snyk orb, you can install, run tests, and monitor projects with Snyk. You can also set a threshold for failing builds, depending on your risk tolerance. Scan results present clear information to help developers quickly make sense of the issues and any available fixes.&lt;/p&gt;

&lt;p&gt;In this tutorial, we use the Snyk orb to demonstrate how to prevent vulnerabilities from passing through the build process by adding automated Snyk tests into a CircleCI workflow.&lt;/p&gt;

&lt;h3&gt;Prerequisites&lt;/h3&gt;

&lt;p&gt;To follow this tutorial, you will need:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;A &lt;a href=&quot;https://circleci.com/signup/&quot;&gt;CircleCI&lt;/a&gt; account&lt;/li&gt;
  &lt;li&gt;A &lt;a href=&quot;https://github.com/signup&quot;&gt;GitHub&lt;/a&gt; account&lt;/li&gt;
  &lt;li&gt;A &lt;a href=&quot;https://app.snyk.io/login?utm_campaign=Tutorial-Blog-Jul21&amp;amp;utm_medium=Partner&amp;amp;utm_source=CircleCI&quot;&gt;Snyk&lt;/a&gt; account&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;You need a Snyk API token to use the Snyk orb. &lt;a href=&quot;https://support.snyk.io/hc/en-us/articles/360004008278-Revoking-and-regenerating-Snyk-API-tokens&quot;&gt;Create a Snyk token&lt;/a&gt;, then &lt;a href=&quot;https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project&quot;&gt;set an environment variable in CircleCI&lt;/a&gt; called &lt;code&gt;SNYK_TOKEN&lt;/code&gt; with its value.&lt;/p&gt;

&lt;p&gt;This tutorial makes the most sense after you have completed the Infrastructure as Code module in &lt;a href=&quot;https://academy.circleci.com&quot;&gt;CircleCI Academy&lt;/a&gt;. You can complete this tutorial without completing the module, but the Terraform workflows will fail.&lt;/p&gt;

&lt;h3&gt;Fork the demo project&lt;/h3&gt;

&lt;p&gt;In this tutorial, you will use the repository from the CircleCI Academy module. There, you will create a workflow that uses Terraform to create a GKE cluster and deploy an application into it as part of a continuous delivery pipeline.&lt;/p&gt;

&lt;p&gt;If you did not complete the module, navigate to the &lt;a href=&quot;https://github.com/datapunkz/learn_iac&quot;&gt;Learn Infrastructure as Code repo&lt;/a&gt; and fork it. Then, head to the &lt;a href=&quot;https://app.circleci.com/&quot;&gt;CircleCI Projects&lt;/a&gt; page, click &lt;strong&gt;Set Up Project&lt;/strong&gt;, then select &lt;strong&gt;Use Existing Config&lt;/strong&gt;.&lt;/p&gt;

&lt;h3&gt;Ensure dependencies are secure and compliant with Snyk Open Source&lt;/h3&gt;

&lt;p&gt;If you completed the Academy module, you deployed an application with open source components, but you did not check them for vulnerabilities. Integrating Snyk Open Source into the CI workflow makes security and compliance testing part of the pipeline, allowing you to prevent applications with vulnerable dependencies from making their way into production.&lt;/p&gt;

&lt;p&gt;To add Snyk Open Source, open the &lt;code&gt;.circleci/config.yml&lt;/code&gt; file in an editor, then add the Snyk orb to the top, replacing &lt;code&gt;@x.y.z&lt;/code&gt; with the latest version of the &lt;a href=&quot;https://circleci.com/developer/orbs/orb/snyk/snyk&quot;&gt;Snyk orb in the orbs registry&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;version: 2.1

orbs:
  snyk: snyk/snyk@1.0.1
  
jobs:
  run_tests:
    docker:
      - image: circleci/node:12
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Adding the orb exposes the Snyk commands and jobs to your workflow. Consider your requirements when choosing where in the workflow to add them. For this example, add the &lt;code&gt;snyk/scan&lt;/code&gt; command to the &lt;code&gt;run_tests&lt;/code&gt; job to check for vulnerabilities and license issues before running unit tests:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;jobs:
  run_tests:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - run:
          name: Install npm dependencies
          command: |
            npm install --save
      - snyk/scan
      - run:
          name: Run Unit Tests
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Save and commit your changes. When the workflow runs, the &lt;code&gt;run_tests&lt;/code&gt; job fails because the &lt;code&gt;package.json&lt;/code&gt; file declares vulnerable dependencies.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-07-29-opensource-issues.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Open Source issues&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-07-29-opensource-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-opensource-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-opensource-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-opensource-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-opensource-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-opensource-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-opensource-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-opensource-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-opensource-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-opensource-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-opensource-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-opensource-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-opensource-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-opensource-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-opensource-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Good thing you checked! However, you might not want to introduce too much disruption into your pipelines too early.&lt;/p&gt;

&lt;p&gt;It is possible to customize this behavior by passing parameters to the orb. For a list of available parameters, view the &lt;a href=&quot;https://circleci.com/developer/orbs/orb/snyk/snyk&quot;&gt;Snyk orb in the orb registry&lt;/a&gt;. To allow the workflow to continue uninterrupted, add the &lt;code&gt;fail-on-issues&lt;/code&gt; parameter to the &lt;code&gt;snyk/scan&lt;/code&gt; command and commit your changes:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- run:
          name: Install npm dependencies
          command: |
            npm install --save
      - snyk/scan:
          fail-on-issues: false
      - run:
          name: Run Unit Tests
          command: |
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Next time the pipeline runs, it will still find issues, but it will continue to the next job.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-07-29-passed-scan.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Passed Open Source Scan&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-07-29-passed-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-passed-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-passed-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-passed-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-passed-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-passed-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-passed-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-passed-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-passed-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-passed-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-passed-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-passed-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-passed-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-passed-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-passed-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To learn how to interpret the CLI results to &lt;a href=&quot;https://support.snyk.io/hc/en-us/articles/360006113798-Remediate-your-vulnerabilities&quot;&gt;remediate open source vulnerabilities&lt;/a&gt;, visit the Snyk documentation.&lt;/p&gt;

&lt;h3&gt;Scan and secure container images with Snyk Container&lt;/h3&gt;

&lt;p&gt;Besides your application dependencies, your choice of container base image can also introduce vulnerable open source components by means of operating system packages and language runtimes.&lt;/p&gt;

&lt;p&gt;Snyk Container uses the same &lt;code&gt;snyk/scan&lt;/code&gt; command with a few parameters. Since the image needs to be built to scan it, add the command to the &lt;code&gt;build_docker_image&lt;/code&gt; job between the &lt;code&gt;docker build&lt;/code&gt; and &lt;code&gt;docker push&lt;/code&gt; steps by breaking up the existing command. Notice the use of the &lt;code&gt;severity-threshold&lt;/code&gt; parameter to report issues of only high or critical severity.&lt;/p&gt;

&lt;p&gt;If you did not complete the CircleCI Academy module, you will need to &lt;a href=&quot;https://circleci.com/docs/2.0/env-vars/#setting-an-environment-variable-in-a-project&quot;&gt;set an environment variable&lt;/a&gt; called &lt;code&gt;DOCKER_LOGIN&lt;/code&gt; with your Docker ID or whatever you want to name the image for this to work:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;build_docker_image:
    docker:
      - image: circleci/node:12
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Build Docker image
          command: |
            export TAG=0.2.&amp;lt;&amp;lt; pipeline.number &amp;gt;&amp;gt;
            export IMAGE_NAME=$CIRCLE_PROJECT_REPONAME
            docker build -t $DOCKER_LOGIN/$IMAGE_NAME -t $DOCKER_LOGIN/$IMAGE_NAME:$TAG .
      - snyk/scan:
          severity-threshold: high
          docker-image-name: $DOCKER_LOGIN/$CIRCLE_PROJECT_REPONAME
          target-file: &quot;Dockerfile&quot;
          fail-on-issues: true
      - run:
          name: Push Docker image
          command: |
            echo $DOCKER_PWD | docker login -u $DOCKER_LOGIN --password-stdin
            docker push $DOCKER_LOGIN/$IMAGE_NAME
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;When the scan completes, Snyk will fail the stage because of high severity vulnerabilities. Like with Snyk Open Source, it is possible to customize this behavior by passing additional parameters to the orb.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-07-29-failed-container-scan.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Failed Container Scan&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-07-29-failed-container-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-failed-container-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-failed-container-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-failed-container-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-failed-container-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-failed-container-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-failed-container-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-failed-container-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-failed-container-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-failed-container-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-failed-container-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-failed-container-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-failed-container-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-failed-container-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-failed-container-scan.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Using Snyk to break the build after a container scan, like in this example, is one way to prevent an image with vulnerabilities from being pushed to the container registry.&lt;/p&gt;

&lt;p&gt;Visit the Snyk documentation to learn how to &lt;a href=&quot;https://support.snyk.io/hc/en-us/articles/360003946937-Understanding-Snyk-Container-CLI-results&quot;&gt;understand Snyk Container CLI results&lt;/a&gt;, and be sure to explore the section on base image remediation.&lt;/p&gt;

&lt;h3&gt;Use Snyk Infrastructure as Code to fix Terraform misconfigurations&lt;/h3&gt;

&lt;p&gt;As we discussed above, modern applications are more than code and open source components; in the cloud era, infrastructure is part of the application. While cloud providers offer tools to manage cloud configuration, misconfiguration of cloud resources remains the most prevalent cloud vulnerability and can be exploited to access cloud data and services. That is where Snyk Infrastructure as Code comes in, providing curated security information that gives developers what they need to find and fix configuration issues quickly.&lt;/p&gt;

&lt;p&gt;As of orb version &lt;code&gt;1.0.0&lt;/code&gt;, Snyk Infrastructure as Code is available as a &lt;code&gt;job&lt;/code&gt; that can be added directly into the &lt;code&gt;workflow&lt;/code&gt;. For this example, add the &lt;code&gt;snyk/scan-iac&lt;/code&gt; job before the &lt;code&gt;gke-create-cluster&lt;/code&gt; job to check that Terraform files are correctly configured before creating the cloud infrastructure. The &lt;code&gt;args&lt;/code&gt; parameter points to which files to check for misconfigurations and can also be used to pass other &lt;a href=&quot;https://support.snyk.io/hc/en-us/articles/360018728618-Test-your-configuration-files&quot;&gt;Snyk CLI arguments&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;workflows:
  build_test:
    jobs:
      - run_tests
      - build_docker_image
      - snyk/scan-iac:
          args: part03/iac_gke_cluster/
      - gke_create_cluster:
          requires:
            - run_tests
            - build_docker_image
            - snyk/scan-iac
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Like with all other Snyk scans, the default behavior is to break the build in case of any misconfigurations.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-07-29-iac-issues.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;IAC Issues&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-07-29-iac-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-iac-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-iac-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-iac-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-iac-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-iac-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-iac-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-iac-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-iac-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-iac-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-iac-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-iac-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-iac-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-iac-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-iac-issues.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Visit the Snyk Academy to learn ways to &lt;a href=&quot;https://solutions.snyk.io/partner-workshops/circleci/scan-terraform-with-the-snyk-orb/adjusting-snyk-iac-scan-parameters&quot;&gt;customize the IaC scan parameters&lt;/a&gt; in this workflow.&lt;/p&gt;

&lt;h3&gt;Augment the developer experience&lt;/h3&gt;

&lt;p&gt;If you made it this far, congratulations! Your delivery pipeline now has security testing for issues introduced by your application’s open source dependencies, container base image, and the Terraform files that deploy it into a production GKE environment. We can make this information more accessible and actionable for developers by also integrating Snyk where they work, the IDE and their source control repository.&lt;/p&gt;

&lt;p&gt;To use Snyk in an IDE, download any of the available &lt;a href=&quot;https://snyk.io/ide-plugins/&quot;&gt;IDE plugins&lt;/a&gt; or use the &lt;a href=&quot;https://support.snyk.io/hc/en-us/articles/360003812578-CLI-reference&quot;&gt;Snyk CLI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To integrate Snyk into source control management (SCM), import your fork of the Learn Infrastructure as Code repo to Snyk using the SCM integration. Visit the &lt;a href=&quot;https://support.snyk.io/hc/en-us/articles/360004032117-GitHub-integration&quot;&gt;Snyk documentation for the GitHub integration&lt;/a&gt; to learn how. Once the fork is imported, you will see the files we tested in this tutorial, and their risks, in the Snyk UI. This enhances developer productivity with features like Fix Pull Requests. Visit the &lt;a href=&quot;https://support.snyk.io/hc/en-us/articles/360018010597-Snyk-SCM-integration-good-practices&quot;&gt;SCM integration best practices&lt;/a&gt; page to learn more.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-07-29-imported-project.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Repo Imported to Snyk&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-07-29-imported-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-imported-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-imported-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-imported-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-imported-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-imported-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-imported-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-imported-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-imported-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-imported-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-imported-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-imported-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-imported-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-imported-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-07-29-imported-project.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;By completing this tutorial you are more aware of the security risks introduced by your developers’ choice of open source, container, and infrastructure configuration. This awareness is an essential first step toward building a culture of collaboration between security teams responsible for preventing production issues, operations teams responsible for keeping pipelines running, and developers in charge of fixing issues.&lt;/p&gt;

&lt;p&gt;Want to learn more? Visit the Snyk Documentation to read some &lt;a href=&quot;https://support.snyk.io/hc/en-us/articles/360018245398-Snyk-CI-CD-Integration-good-practices-&quot;&gt;best practices for integrating Snyk into CI/CD pipelines&lt;/a&gt;.&lt;/p&gt;
</description>
        
      </item>
    
      
      <item>
        <title>Continuous deployment of Node apps to Heroku</title>
        <link>https://circleci.com/blog/continuous-deployment-to-heroku/</link>
        <pubDate>Wed, 28 Jul 2021 09:00:00 -0700</pubDate>
        <guid isPermaLink="true">https://circleci.com/blog/continuous-deployment-to-heroku/</guid>
        
          <dc:creator>Fikayo Adepoju</dc:creator>
        
        
          <description>&lt;p&gt;&lt;a href=&quot;https://circleci.com/orbs/&quot;&gt;CircleCI orbs&lt;/a&gt; are reusable packages of YAML configuration that condense repeated pieces of config into a single line of code. Since its launch in 2018, the &lt;a href=&quot;https://circleci.com/developer/orbs&quot;&gt;CircleCI orbs registry&lt;/a&gt; has been used by developers, development teams, and by companies who want to help developers integrate their services seamlessly into &lt;a href=&quot;https://circleci.com/continuous-integration/&quot;&gt;continuous integration&lt;/a&gt; pipelines.&lt;/p&gt;

&lt;p&gt;In this tutorial, we will show how to use CircleCI orbs to continuously deploy a &lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; application to &lt;a href=&quot;https://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt;, one of the most popular hosting platforms.&lt;/p&gt;

&lt;h2&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;To follow along with this tutorial, you will need a few things first:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://nodejs.org/&quot;&gt;Node.js&lt;/a&gt; installed on your system&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt; installed on your system&lt;/li&gt;
  &lt;li&gt;A &lt;a href=&quot;https://www.heroku.com/&quot;&gt;Heroku&lt;/a&gt; account&lt;/li&gt;
  &lt;li&gt;A &lt;a href=&quot;https://github.com/&quot;&gt;GitHub&lt;/a&gt; account&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With these, you are ready to follow along.&lt;/p&gt;

&lt;h2&gt;Cloning a Node.js API project&lt;/h2&gt;

&lt;p&gt;The application we want to host on Heroku is a simple Node.js API project that consists of a single route that returns a list of “todos”.&lt;/p&gt;

&lt;p&gt;As this exercise is focused on deploying an application to the Heroku platform, there is no need to bother with the details of creating a new Node.js application. Just clone a ready-made one from &lt;a href=&quot;https://github.com/coderonfleek/simple-node-api&quot;&gt;this repo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To clone the project, run:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;git clone https://github.com/coderonfleek/simple-node-api.git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will clone the &lt;a href=&quot;https://expressjs.com/&quot;&gt;Express.js&lt;/a&gt; API project onto your system. The entry point for this application is the &lt;code&gt;server.js&lt;/code&gt; file which contains this code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;const express = require(&quot;express&quot;);
const routes = require(&quot;./routes&quot;);

const app = express();
const port = process.env.PORT || &quot;1337&quot;;
app.set(&quot;port&quot;, port);

app.use('/', routes);

app.listen(port, () =&amp;gt; console.log(`Server running on localhost:${port}`));
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This code creates and exposes a new Express.js application at port 1337. The application is then set to use routes defined in the &lt;code&gt;routes.js&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;The &lt;code&gt;routes.js&lt;/code&gt; file creates a new Express.js router and exposes a single &lt;code&gt;/todos&lt;/code&gt; route which returns an array of to-do items defined in the &lt;code&gt;todo.js&lt;/code&gt; file. It then exports the router object. Here is the code:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;const express = require('express');
const todos = require(&quot;./todos&quot;);

const router = express.Router();

router.get(&quot;/todos&quot;, function(req, res) {
  res.json(todos);
});

module.exports = router;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We can give the project a try by first installing the dependencies. In the project’s root, type:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then run the application with the command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;node server.js
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The application should now be up and running at the address &lt;code&gt;http://localhost:1337&lt;/code&gt;. Open up your preferred browser and visit the &lt;code&gt;/todos&lt;/code&gt; route at &lt;code&gt;http://localhost:1337/todos&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku1.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Screenshot of what the route returns&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As seen above, the route returns an array of todo objects each with an &lt;code&gt;id&lt;/code&gt; and &lt;code&gt;task&lt;/code&gt; name.&lt;/p&gt;

&lt;p&gt;Now create a new repository for this project on your GitHub account and &lt;a href=&quot;https://circleci.com/blog/pushing-a-project-to-github/&quot;&gt;push the project&lt;/a&gt; to the repository you just created.&lt;/p&gt;

&lt;h2&gt;Preparing the Node.js project for deployment&lt;/h2&gt;

&lt;p&gt;When there is no Heroku Procfile specified, Heroku starts a Node.js project with the &lt;code&gt;npm start&lt;/code&gt; command. This command indicates that Heroku requires a &lt;code&gt;start&lt;/code&gt; script in our &lt;code&gt;package.json&lt;/code&gt; file for it to start our application.&lt;/p&gt;

&lt;p&gt;That means we need to create a &lt;code&gt;start&lt;/code&gt; script in our &lt;code&gt;package.json&lt;/code&gt; file to instruct Heroku on how to start the application. If you are using the cloned project, you can skip this step. Otherwise, go to the &lt;code&gt;scripts&lt;/code&gt; section of &lt;code&gt;package.json&lt;/code&gt; (right now it contains only one &lt;code&gt;test&lt;/code&gt; script ) and add the &lt;code&gt;start&lt;/code&gt; script:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;….
“scripts” : {
	……,
	“start”: “node server.js”

}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With this script in place, Heroku can now start our application successfully.&lt;/p&gt;

&lt;h2&gt;Creating an application on Heroku&lt;/h2&gt;

&lt;p&gt;The next step is to create a Heroku application. This application will map to our deployment and help us manage our deployed application. It will provide features like metrics, scaling capabilities, and access to application logs.&lt;/p&gt;

&lt;p&gt;Go to your Heroku dashboard and create a new application by clicking &lt;strong&gt;New&lt;/strong&gt; and selecting &lt;strong&gt;Create new app&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;This opens the app creation form.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku2.png%22/?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Screenshot of the app creation form&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku2.png%22/?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku2.png%22/?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku2.png%22/?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku2.png%22/?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku2.png%22/?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku2.png%22/?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku2.png%22/?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku2.png%22/?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku2.png%22/?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku2.png%22/?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku2.png%22/?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku2.png%22/?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku2.png%22/?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku2.png%22/?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku2.png%22/?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We have named the app &lt;code&gt;my-heroku-node-api&lt;/code&gt;, but feel free to give it any name you prefer. Just make sure the name does not contain spaces or characters that are not URL-friendly.&lt;/p&gt;

&lt;p&gt;Click &lt;strong&gt;Create app&lt;/strong&gt; to set up your new application.&lt;/p&gt;

&lt;h2&gt;Setting up the project on CircleCI&lt;/h2&gt;

&lt;p&gt;The next step to deploying our application to Heroku is  connecting the application in our GitHub repository to CircleCI.&lt;/p&gt;

&lt;p&gt;Go to your &lt;a href=&quot;https://app.circleci.com/dashboard&quot;&gt;CircleCI dashboard&lt;/a&gt; and add the project in the &lt;strong&gt;Add Project&lt;/strong&gt; section.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku3.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Screenshot of the dashboard&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next to your project (in this case &lt;code&gt;simple-node-api&lt;/code&gt;), click the &lt;strong&gt;Set Up Project&lt;/strong&gt; button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku4.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Screenshot Set Up Project form&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;
Click &lt;strong&gt;Start building&lt;/strong&gt; to begin setting up the project. This will immediately give us an error saying a CircleCI &lt;a href=&quot;https://circleci.com/docs/2.0/configuration-reference/&quot;&gt;configuration file&lt;/a&gt; cannot be found in the project.&lt;/p&gt;

&lt;p&gt;This is understandable because we have not included our pipeline configuration file yet. We will be doing that later in the tutorial.&lt;/p&gt;

&lt;h2&gt;Configuring Heroku access on CircleCI&lt;/h2&gt;

&lt;p&gt;To push our project to Heroku from CircleCI, we need to configure an authenticated handshake between CircleCI and Heroku. Configure the handshake by creating two &lt;a href=&quot;https://circleci.com/docs/2.0/env-vars/&quot;&gt;environment variables&lt;/a&gt; in the settings for your CircleCI project:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;HEROKU_APP_NAME&lt;/code&gt;&lt;/strong&gt; is the name of your Heroku application (in this case &lt;code&gt;my-heroku-node-api&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code&gt;HEROKU_API_KEY&lt;/code&gt;&lt;/strong&gt; is your Heroku account API key. This can be found under the Account tab of your Heroku account under Account Settings. Scroll to the API Key section and click &lt;strong&gt;Reveal&lt;/strong&gt; to copy your API key.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Go to your CircleCI dashboard and click &lt;strong&gt;Settings&lt;/strong&gt; for your project.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku6.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;CircleCI project settings&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the sidebar menu of the settings page, click &lt;strong&gt;Environment Variables&lt;/strong&gt; under Build Settings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku7.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Environment Variables form&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;On the environment variables page, create two variables named &lt;code&gt;HEROKU_APP_NAME&lt;/code&gt; and &lt;code&gt;HEROKU_API_KEY&lt;/code&gt; and enter the values for them.&lt;/p&gt;

&lt;p&gt;With these in place, our CircleCI configuration will be able to make authenticated deployments to the Heroku platform.&lt;/p&gt;

&lt;h2&gt;Using the Heroku orb to deploy the app&lt;/h2&gt;

&lt;p&gt;Now to the main action area: our deploy pipeline. Here is a tip: this is going to be the easiest step. Did that just put a smile on your face? I would like to believe so!&lt;/p&gt;

&lt;p&gt;This step is not easy with every CI tool, but with CircleCI orbs, we can work magic. That is because the CircleCI orbs registry has a ready-made orb for deploying applications to Heroku. We will be using the Heroku orb in our CircleCI configuration to deploy our application.&lt;/p&gt;

&lt;p&gt;At the root of your project, create a folder named &lt;code&gt;.circleci&lt;/code&gt; and within it, create a file named &lt;code&gt;config.yml&lt;/code&gt;. Add this configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;version: 2.1
orbs:
  heroku: circleci/heroku@0.0.10
workflows:
  heroku_deploy:
    jobs:
      - heroku/deploy-via-git
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Is that everything? You bet it is! Remember, I told you we would work magic.&lt;/p&gt;

&lt;p&gt;In the configuration above, we pull in the Heroku orb &lt;code&gt;circleci/heroku@0.0.10&lt;/code&gt;, which automatically gives us access to a powerful set of Heroku jobs and commands.&lt;/p&gt;

&lt;p&gt;One of those jobs is the &lt;code&gt;heroku/deploy-via-git&lt;/code&gt; which deploys your application straight from your GitHub repo to your Heroku account.&lt;/p&gt;

&lt;p&gt;Right now, you might have a few questions. How was the Heroku CLI installed? When was the code checked out of the repo? How were the authentication credentials accessed? When did Heroku’s deployment command run?&lt;/p&gt;

&lt;p&gt;This is where the true power of orbs shines through. All processes in the previous questions have already been abstracted by the Heroku orb. Pulling in the orb ensures that we have an environment set up for deployment to Heroku while the job checks out our code, deploys it to Heroku, and starts the application. It abstracts the nitty-gritty details of the process.&lt;/p&gt;

&lt;p&gt;Save the configuration and push your changes to your GitHub repository. This should immediately trigger the deployment process to Heroku via CircleCI.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku8.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Screenshot of successful deployment&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Success! To get a view into what the Heroku orb did behind the scenes, click on the build process.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku9.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Build process details&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You did not have to define these steps because the orb took care of everything for you.&lt;/p&gt;

&lt;p&gt;To confirm that the application has been successfully deployed and is now running, visit the link &lt;code&gt;https://YOUR_HEROKU_APP_NAME.herokuapp.com&lt;/code&gt;. For this tutorial, this URL will be &lt;code&gt;https://my-heroku-node-api.herokuapp.com/todos&lt;/code&gt;. This will return our list of todos as expected. I have used a JSON formatter plugin for Firefox for better visibility.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku10.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Application using formatter plugin&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2020-03-20-heroku10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And there you have it. The Node.js API project has been successfully deployed to Heroku in very few steps through the power of CircleCI orbs.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;CircleCI orbs are a game-changer in the CI/CD world. Abstracting a lot of tedious, error-prone boilerplate configuration code to provide simple, stable, and powerful abstractions helps developers focus on what they do best: deploying applications successfully.&lt;/p&gt;

&lt;p&gt;Be sure to check the &lt;a href=&quot;https://circleci.com/developer/orbs&quot;&gt;CircleCI orbs registry&lt;/a&gt; for orbs that suit your programming language and deployment preferences. Share this tutorial with your co-workers. Let them know that, with CircleCI orbs, you do not need to reinvent the wheel.&lt;/p&gt;

&lt;p&gt;Happy coding!&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a href=&quot;https://twitter.com/coderonfleek?lang=en&quot;&gt;Fikayo Adepoju&lt;/a&gt; is a full-stack developer, technical writer, and tech content creator proficient in Web and Mobile technologies and DevOps with over 10 years experience developing scalable distributed applications. With over 40 articles written for CircleCI, Twilio, Auth0, and The New Stack blogs, and also on his personal Medium page, he loves to share his knowledge to as many developers as would benefit from it. You can also check out his video courses on &lt;a href=&quot;https://www.udemy.com/user/fikayo-adepoju/&quot;&gt;Udemy&lt;/a&gt;.&lt;/p&gt;

</description>
        
      </item>
    
      
      <item>
        <title>Benchmarking Android applications in CI/CD pipelines</title>
        <link>https://circleci.com/blog/benchmarking-android/</link>
        <pubDate>Tue, 27 Jul 2021 11:00:00 -0700</pubDate>
        <guid isPermaLink="true">https://circleci.com/blog/benchmarking-android/</guid>
        
          <dc:creator>Zan Markan</dc:creator>
        
        
          <description>&lt;p&gt;Highly performant apps that load fast and interact smoothly have become a necessity. These qualities are expected by  users, and not just a nice-to-have anymore. The way to ensure smooth interactions is to add performance validation as part of your release flow.&lt;/p&gt;

&lt;p&gt;Google recently released updates to their &lt;a href=&quot;https://developer.android.com/studio/profile/benchmarking-overview&quot;&gt;Jetpack benchmarking libraries&lt;/a&gt;. One notable addition is the Macrobenchmark library. This lets you test your app’s performance in areas like startup and scroll jank. In this tutorial you will get started with the Jetpack benchmarking libraries, and learn how to implement it as part of a CI/CD flow.&lt;/p&gt;

&lt;h2&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;You will need a few things to get the most from this tutorial:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Experience with Android development and testing, including instrumentation testing&lt;/li&gt;
  &lt;li&gt;Experience with Gradle&lt;/li&gt;
  &lt;li&gt;A free &lt;a href=&quot;https://circleci.com/signup&quot;&gt;CircleCI&lt;/a&gt; account&lt;/li&gt;
  &lt;li&gt;A Firebase and Google Cloud platform account&lt;/li&gt;
  &lt;li&gt;Android Studio Arctic Fox&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;i&gt;The version I used to write this tutorial is 2020.3.1 Beta 4. Macrobenchmark is not supported on the current stable version of Android Studio at the time of writing (July 2021).&lt;/i&gt;&lt;/p&gt;

&lt;h2&gt;About the project&lt;/h2&gt;

&lt;p&gt;The project is based on an earlier testing sample I created for &lt;a href=&quot;https://circleci.com/blog/building-android-on-circleci/&quot;&gt;a blog post on testing Android apps in a CI/CD pipeline&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have expanded &lt;a href=&quot;https://github.com/CircleCI-Public/android-testing-circleci-examples&quot;&gt;the sample project&lt;/a&gt; to include a &lt;code&gt;benchmark&lt;/code&gt; job as part of a CI/CD build. This new job runs app startup benchmarks using the Jetpack Macrobenchmark library.&lt;/p&gt;

&lt;h2&gt;Jetpack benchmarking&lt;/h2&gt;

&lt;p&gt;Android Jetpack offers two types of benchmarking: Microbenchmark and Macrobenchmark. Microbenchmark, which has been around since 2019, allows for making performance measurement of application code (think caching or similar processes that might take a while to process).&lt;/p&gt;

&lt;p&gt;Macrobenchmark is the new addition to Jetpack. It allows you to measure your app’s performance as a whole on easy-to-notice areas like app startup and scrolling. The sample application uses these macrobenchmark tests for measuring app startup.&lt;/p&gt;

&lt;p&gt;Both benchmarking libraries and approaches work with the familiar Android Instrumentation framework that runs on connected devices and emulators.&lt;/p&gt;

&lt;h3&gt;Set up the library&lt;/h3&gt;

&lt;p&gt;The library setup is documented well &lt;a href=&quot;https://developer.android.com/studio/profile/macrobenchmark#setup&quot;&gt;on the official Jetpack site - Macrobenchmark Setup&lt;/a&gt;. 
Note: we will not cover all steps in fine detail because they might change in future preview releases. Instead, here is an overview of the procedure:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a new test module named &lt;code&gt;macrobenchmark&lt;/code&gt;. In Android Studio create an Android library module, and change the &lt;code&gt;build.gradle&lt;/code&gt; to instead use &lt;code&gt;com.android.test&lt;/code&gt; as the plugin. The new module needs minimum SDK level to API 29: Android 10 (Q).&lt;/li&gt;
  &lt;li&gt;Make several modifications to the new module’s &lt;code&gt;build.gradle&lt;/code&gt; file. Change test implementations to implementation, point to the app module you want to test, and make the release build type &lt;code&gt;debuggable&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Add the profileable tag to your app’s &lt;code&gt;AndroidManifest&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Specify the local release signing config. You can use the existing &lt;code&gt;debug&lt;/code&gt; config.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please refer to the guide in the official Macrobenchmark library documentation for complete step-by-step instructions: https://developer.android.com/studio/profile/macrobenchmark#setup.&lt;/p&gt;

&lt;h3&gt;Writing and executing Macrobenchmark tests&lt;/h3&gt;

&lt;p&gt;Macrobenchmark library introduces a few new JUnit rules and metrics.&lt;/p&gt;

&lt;p&gt;We are using the &lt;code&gt;StartupTimingMetric&lt;/code&gt; taken from the &lt;a href=&quot;https://github.com/android/performance-samples/tree/main/MacrobenchmarkSample/macrobenchmark&quot;&gt;performance-samples project on GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;const val TARGET_PACKAGE = &quot;com.circleci.samples.todoapp&quot;

fun MacrobenchmarkRule.measureStartup(
    profileCompiled: Boolean,
    startupMode: StartupMode,
    iterations: Int = 3,
    setupIntent: Intent.() -&amp;gt; Unit = {}
) = measureRepeated(
    packageName = TARGET_PACKAGE,
    metrics = listOf(StartupTimingMetric()),
    compilationMode = if (profileCompiled) {
        CompilationMode.SpeedProfile(warmupIterations = 3)
    } else {
        CompilationMode.None
    },
    iterations = iterations,
    startupMode = startupMode
) {
    pressHome()
    val intent = Intent()
    intent.setPackage(TARGET_PACKAGE)
    setupIntent(intent)
    startActivityAndWait(intent)
}

@LargeTest
@RunWith(Parameterized::class)
class StartupBenchmarks(private val startupMode: StartupMode) {

    @get:Rule
    val benchmarkRule = MacrobenchmarkRule()

    @Test
    fun startupMultiple() = benchmarkRule.measureStartup(
        profileCompiled = false,
        startupMode = startupMode,
        iterations = 5
    ) {
        action = &quot;com.circleci.samples.target.STARTUP_ACTIVITY&quot;
    }

    companion object {
        @Parameterized.Parameters(name = &quot;mode={0}&quot;)
        @JvmStatic
        fun parameters(): List&amp;lt;Array&amp;lt;Any&amp;gt;&amp;gt; {
            return listOf(StartupMode.COLD, StartupMode.WARM, StartupMode.HOT)
                .map { arrayOf(it) }
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The code above takes 3 types of startup metrics: hot, warm, and cold startup as parameterized options. These options are passed to the test using the &lt;code&gt;MacroBenchmarkRule&lt;/code&gt; (meaning how recently the app has been run and whether it is being kept in memory or not).&lt;/p&gt;

&lt;h3&gt;Running benchmarks in a CI/CD pipeline&lt;/h3&gt;

&lt;p&gt;You can run these samples in Android Studio, which gives you a nice printout of your app’s performance metrics, but won’t do anything to ensure your app is always performant. To do that you need to integrate benchmarks in your CI/CD process.&lt;/p&gt;

&lt;p&gt;The steps required are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Build the release variants of app and Macrobenchmark modules&lt;/li&gt;
  &lt;li&gt;Run the tests on Firebase Test Lab (FTL) or similar tool&lt;/li&gt;
  &lt;li&gt;Download the benchmark results&lt;/li&gt;
  &lt;li&gt;Store benchmarks as artifacts&lt;/li&gt;
  &lt;li&gt;Process the benchmark results to get timings data&lt;/li&gt;
  &lt;li&gt;Pass or fail the build based on the results&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I created a new &lt;code&gt;benchmark-ftl&lt;/code&gt; job to run my tests:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;orbs:
  android: circleci/android@1.0.3
  gcp-cli: circleci/gcp-cli@2.2.0

...

jobs:
  ...
    benchmarks-ftl:
    executor:
      name: android/android
      sdk-version: &quot;30&quot;
      variant: node
    steps:
      - checkout
      - android/restore-gradle-cache
      - android/restore-build-cache
      - run:
          name: Build app and test app
          command: ./gradlew app:assembleRelease macrobenchmark:assemble
      - gcp-cli/initialize:
          gcloud-service-key: GCP_SA_KEY
          google-project-id: GCP_PROJECT_ID
      - run:
          name: run on FTL
          command: |
            gcloud firebase test android run \
              --type instrumentation \
              --app app/build/outputs/apk/release/app-release.apk \
              --test macrobenchmark/build/outputs/apk/release/macrobenchmark-release.apk \
              --device model=flame,version=30,locale=en,orientation=portrait \
              --directories-to-pull /sdcard/Download \
              --results-bucket gs://android-sample-benchmarks \
              --results-dir macrobenchmark \
              --environment-variables clearPackageData=true,additionalTestOutputDir=/sdcard/Download,no-isolated-storage=true
      - run:
          name: Download benchmark data
          command: |
            mkdir ~/benchmarks
            gsutil cp -r 'gs://android-sample-benchmarks/macrobenchmark/**/artifacts/sdcard/Download/*'  ~/benchmarks
            gsutil rm -r gs://android-sample-benchmarks/macrobenchmark
      - store_artifacts:
            path: ~/benchmarks
      - run:
          name: Evaluate benchmark results
          command: node scripts/eval_startup_benchmark_output.js

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This snippet represents a job that runs the macrobenchmark tests on a real device in &lt;a href=&quot;https://firebase.google.com/docs/test-lab/android/command-line&quot;&gt;Firebase Test Lab&lt;/a&gt;. We are using the Docker executor with the image provided by the Android orb, which has Android SDK 30 installed and includes NodeJS. We will use Node for the script that evaluates our results.&lt;/p&gt;

&lt;p&gt;After building the app and macrobenchmark module APKs, we need to initialize the &lt;a href=&quot;https://circleci.com/developer/orbs/orb/circleci/gcp-cli#commands-initialize&quot;&gt;Google Cloud CLI using the orb&lt;/a&gt;. This is where we provide the environmental variables in CircleCI for Google Cloud. Then, we run the tests in Firebase Test Lab:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- run:
    name: run on FTL
    command: |
      gcloud firebase test android run \
        --type instrumentation \
        --app app/build/outputs/apk/release/app-release.apk \
        --test macrobenchmark/build/outputs/apk/release/macrobenchmark-release.apk \
        --device model=flame,version=30,locale=en,orientation=portrait \
        --directories-to-pull /sdcard/Download \
        --results-bucket gs://android-sample-benchmarks \
        --results-dir macrobenchmark \
        --environment-variables clearPackageData=true,additionalTestOutputDir=/sdcard/Download,no-isolated-storage=true
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This uploads the APKs to Firebase, specifies the device (Pixel 4 in our case), provides environmental variables for the test, and specifies the Cloud Storage Bucket to store the results in. We are always putting it in the &lt;code&gt;macrobenchmark&lt;/code&gt; directory for easier fetching. We do not need to install the &lt;code&gt;gcloud&lt;/code&gt; tool used to run the tests; that comes bundled with the CircleCI Android Docker image.&lt;/p&gt;

&lt;p&gt;Once the job terminates we need to download the benchmark data using the &lt;code&gt;gsutil&lt;/code&gt; tool that is bundled with the GCP CLI tool:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- run:
    name: Download benchmark data
    command: |
      mkdir ~/benchmarks
      gsutil cp -r 'gs://android-sample-benchmarks/macrobenchmark/**/artifacts/sdcard/Download/*'  ~/benchmarks
      gsutil rm -r gs://android-sample-benchmarks/macrobenchmark
- store_artifacts:
    path: ~/benchmarks
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This creates a &lt;code&gt;benchmarks&lt;/code&gt; directory and copies the benchmarks to it from cloud storage. After copying the files we are also removing the &lt;code&gt;macrobenchmark&lt;/code&gt; directory in our storage bucket to avoid cluttering it with prior trace files.
You could alternatively retain the files in Google Cloud Storage by instead constructing the directory name from the job ID, for example.&lt;/p&gt;

&lt;h3&gt;Evaluating benchmark results&lt;/h3&gt;

&lt;p&gt;The benchmark test command will terminate successfully if the benchmarks have completed. It won’t give you any indication of how &lt;i&gt;well&lt;/i&gt; they actually performed, though. For that you will need to analyze the benchmark results and decide for yourself whether the test has failed or passed.&lt;/p&gt;

&lt;p&gt;The results are exported in a JSON file containing the minimum, maximum, and median timings of each test.
I wrote a short Node.js script comparing these benchmarks that fails if any of them runs outside my expected timings. Node.js is well suited for working with JSON files and is readily available on CircleCI machine images.&lt;/p&gt;

&lt;p&gt;Running the script is just a single command:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;- run:
    name: Evaluate benchmark results
    command: node scripts/eval_startup_benchmark_output.js

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;const benchmarkData = require('/home/circleci/benchmarks/com.circleci.samples.todoapp.macrobenchmark-benchmarkData.json')

const COLD_STARTUP_MEDIAN_THRESHOLD_MILIS = YOUR_COLD_THRESHOLD
const WARM_STARTUP_MEDIAN_THRESHOLD_MILIS = YOUR_WARM_THRESHOLD
const HOT_STARTUP_MEDIAN_THRESHOLD_MILIS = YOUR_HOT_THRESHOLD

const coldMetrics = benchmarkData.benchmarks.find(element =&amp;gt; element.params.mode === &quot;COLD&quot;).metrics.startupMs
const warmMetrics = benchmarkData.benchmarks.find(element =&amp;gt; element.params.mode === &quot;WARM&quot;).metrics.startupMs
const hotMetrics = benchmarkData.benchmarks.find(element =&amp;gt; element.params.mode === &quot;HOT&quot;).metrics.startupMs

let err = 0
let coldMsg = `Cold metrics median time - ${coldMetrics.median}ms `
let warmMsg = `Warm metrics median time - ${warmMetrics.median}ms `
let hotMsg = `Hot metrics median time - ${hotMetrics.median}ms `

if(coldMetrics.median &amp;gt; COLD_STARTUP_MEDIAN_THRESHOLD_MILIS){
    err = 1
    console.error(`${coldMsg} ❌ - OVER THRESHOLD ${COLD_STARTUP_MEDIAN_THRESHOLD_MILIS}ms`)
} else {
    console.log(`${coldMsg} ✅`)
}

if(warmMetrics.median &amp;gt; WARM_STARTUP_MEDIAN_THRESHOLD_MILIS){
    err = 1
    console.error(`${warmMsg} ❌ - OVER THRESHOLD ${WARM_STARTUP_MEDIAN_THRESHOLD_MILIS}ms`)
} else {
    console.log(`${warmMsg} ✅`)
}

if(hotMetrics.median &amp;gt; HOT_STARTUP_MEDIAN_THRESHOLD_MILIS){
    err = 1
    console.error(`${hotMsg} ❌ - OVER THRESHOLD ${HOT_STARTUP_MEDIAN_THRESHOLD_MILIS}ms`)
} else {
    console.log(`${hotMsg} ✅`)
}

process.exit(err)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To establish a threshold for timings, I based my expected timings on prior benchmark run results. If we introduce some code that slows down the startup, like a lengthy network call, the benchmark evaluation would run above the threshold and fail the build.&lt;/p&gt;

&lt;p&gt;To fail a build I am able to call &lt;code&gt;process.exit(err)&lt;/code&gt;, which returns a non-zero status code from a script, which fails the benchmark evaluation job.&lt;/p&gt;

&lt;p&gt;This is a very simplified sample of what is possible for benchmarking. The folks working on Jetpack benchmarking libraries have written about comparing benchmarks to recent builds to detect any regressions using a step-fitting approach. You can read about it in &lt;a href=&quot;https://medium.com/androiddevelopers/fighting-regressions-with-benchmarks-in-ci-6ea9a14b5c71&quot;&gt;this blog post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Developers using CircleCI could implement a similar step-fitting approach by getting historical job data from previous builds using the CircleCI API: https://circleci.com/docs/api/v2/#operation/getJobArtifacts.&lt;/p&gt;

&lt;h2&gt;Caveats&lt;/h2&gt;

&lt;p&gt;The end-to-end benchmarks are by definition flaky tests, and need to be run on real devices. Running on an emulator will not produce results that are close to what your users would see. To illustrate, I have created a &lt;code&gt;benchmarks-emulator&lt;/code&gt; job to show you the difference in timings.&lt;/p&gt;

&lt;p&gt;The benchmarking tools are still in beta as of writing this (July 2021). To use them, you need to preview version of Android Studio (Arctic Fox). The plugins and libraries are being actively developed so updating everything might not work as described.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;In this article, I covered how to include Android app performance benchmarking in a CI/CD pipeline alongisde your other tests. This prevents performance regressions from reaching your users as you add new features and other improvements.&lt;/p&gt;

&lt;p&gt;We used the new Android Jetpack macrobenchmarking library and showed ways to integrate it with Firebase Test Lab to run benchmarks on real devices. We showed how to analyze the results, passing the build if the application startup time exceeds our allowed threshold.&lt;/p&gt;

&lt;p&gt;If you have any feedback or suggestions for what topics I should cover next, contact me on &lt;a href=&quot;https://twitter.com/zmarkan/&quot;&gt;Twitter - @zmarkan&lt;/a&gt;.&lt;/p&gt;

&lt;h2&gt;Resources&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://developer.android.com/studio/profile/run-benchmarks-in-ci&quot;&gt;Run benchmarks in CI&lt;/a&gt;&lt;/p&gt;
</description>
        
      </item>
    
      
      <item>
        <title>Completing the security testing automation cycle</title>
        <link>https://circleci.com/blog/security-testing-automation-cycle/</link>
        <pubDate>Mon, 26 Jul 2021 09:00:00 -0700</pubDate>
        <guid isPermaLink="true">https://circleci.com/blog/security-testing-automation-cycle/</guid>
        
          <dc:creator>Oliver Moradov</dc:creator>
        
        
          <description>&lt;p&gt;DevOps, DevSecOps and CI/CD are synonymous with one word - automation. Automating their workflows gives developers the ability to deliver consistency, time savings, and useful insights into their software development life cycle (SDLC). But automation is only as efficient as your weakest link or most cumbersome bottleneck, which can sometimes be security testing.&lt;/p&gt;

&lt;p&gt;Security testing has traditionally been carried out either manually or quite late in the process. Sometimes security testing relied on legacy tools that are slow, are not developer friendly and do not effectively integrate into the continuous integration (CI) &lt;a href=&quot;https://circleci.com/blog/what-is-a-ci-cd-pipeline/&quot;&gt;pipeline&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;To maintain rapid release cycles, you are either forced to wait until the manual security checks and validations are complete (which could take weeks), or accept the risk and deploy (which is unfortunately more common). Either of these choices can result in significant vulnerabilities in production, with issues only being remediated months after a release is completed (if at all), and resulting in an insurmountable technical and security debt.&lt;/p&gt;

&lt;p&gt;This bottleneck counteracts the benefits gained from automation. To compound matters, bottlenecked security testing becomes such a pain point that it is routinely ignored, or even removed from the workflow entirely. This article will describe some ways to keep security testing automation an active part of your pipeline so you can continue to deliver timely and secure apps of consistently high quality.&lt;/p&gt;

&lt;h2&gt;Prerequisites&lt;/h2&gt;

&lt;p&gt;To follow the examples in this article, you will need to have a few things in place.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;GitHub account&lt;/li&gt;
  &lt;li&gt;A &lt;a href=&quot;https://circleci.com/signup&quot;&gt;CircleCI&lt;/a&gt; account&lt;/li&gt;
  &lt;li&gt;Cloud account (for this example we will use an AWS account)&lt;/li&gt;
  &lt;li&gt;A &lt;a href=&quot;https://go.neuralegion.com/appsec-testing-for-devs?utm_source=referral&amp;amp;utm_medium=website&amp;amp;utm_campaign=circleci&quot;&gt;NexPloit.app account&lt;/a&gt; (it is free) to run the security tests&lt;/li&gt;
&lt;/ul&gt;

&lt;h2&gt;Automated security testing as part of your CircleCI workflow&lt;/h2&gt;

&lt;p&gt;To maintain security testing automation as part of your workflow requires that your tooling has attributes that complement and keep up with the fast pace:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Seamlessly integrated into your CI&lt;/li&gt;
  &lt;li&gt;Designed for developers. Tooling built for cyber security professionals, with complicated test setup and configurations, will not work for developers&lt;/li&gt;
  &lt;li&gt;Intuitive scan optimizations and the ability to leverage config files as code&lt;/li&gt;
  &lt;li&gt;The ability to test every build and commit, quickly, while also identifying vulnerabilities&lt;/li&gt;
  &lt;li&gt;Automated removal of false positives in a way that does not delay (and annoy) developers (and the security team)&lt;/li&gt;
  &lt;li&gt;Clear and effective remediation guidelines&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With this kind of tooling in place, automated testing surfaces real issues that can be remediated early and often, and developers will start trusting the outcome. Integrating and running these tests to start getting security compliance on every build, is very simple, as I will show in the next few sections of this article.&lt;/p&gt;

&lt;h2&gt;Integrating and Configuring CircleCI and NexPloit&lt;/h2&gt;

&lt;p&gt;NeuraLegion has a &lt;a href=&quot;https://circleci.com/developer/orbs/orb/neuralegion/nexploit&quot;&gt;CircleCI orb&lt;/a&gt;. For this example, though, we will use a vulnerable application in a GitHub repository and set up a CircleCI workflow.&lt;/p&gt;

&lt;p&gt;We will run an initial security scan using NexPloit against the target, where CircleCI will break the build as per our configuration and the results can be viewed for remediation. The &lt;a href=&quot;https://github.com/NeuraLegion/circleci-example&quot;&gt;code repository&lt;/a&gt; for this example contains a publicly available repository of an example CircleCI YAML configuration file. This runs a scan against an intentionally vulnerable benchmark application called &lt;a href=&quot;https://brokencrystals.com/&quot;&gt;Broken Crystals&lt;/a&gt;. Feel free to use this target as a test project.&lt;/p&gt;

&lt;p&gt;This YAML file contains the configuration for the security scanning, the pipeline itself (called nexploit), with details of the repo and execution steps.&lt;/p&gt;

&lt;p&gt;Install the NexPloit CLI utility so you can use the Nexploit API to run, poll status, and stop scans.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image8.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Output of NexPloit CLI&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image8.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Next we need to provide details for the scan set up:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;A crawler will be used on the target to automatically detect the attack surface&lt;/li&gt;
  &lt;li&gt;NEXPLOIT_TOKEN – a token required to use the Nexploit API&lt;/li&gt;
  &lt;li&gt;The length of the scan and polling intervals and timeout&lt;/li&gt;
  &lt;li&gt;Breakpoint, which in this instance is the build failing on detection of a medium severity issue&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image14.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Code for defining scan set up&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image14.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image14.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image14.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image14.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image14.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image14.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image14.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image14.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image14.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image14.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image14.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image14.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image14.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image14.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image14.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;So, let’s look at how you set up an automatic scan in CircleCI.&lt;/p&gt;

&lt;p&gt;First, we need to add our integrations. If you haven’t already, add your GitHub and Nexploit.app integrations.&lt;/p&gt;

&lt;h2&gt;Integrating GitHub with CircleCI&lt;/h2&gt;

&lt;p&gt;Probably the most simple process, there are no plugins to install and integration really is out-of-the-box. Simply sign in with your GitHub account and CircleCI mirrors your GitHub team permissions and privileges, so you can start building right away. CircleCI automatically runs your build and test processes whenever you commit code in GitHub.&lt;/p&gt;

&lt;h2&gt;Integrating NeuraLegion’s Nexploit.app with CircleCI&lt;/h2&gt;

&lt;p&gt;In CircleCI, navigate to your Projects and select the repo you would like to integrate with automated testing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image7.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Select repo for automated testing&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image7.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;h3&gt;Get Nexploit.app API Key&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Go to &lt;strong&gt;Project Settings&lt;/strong&gt;, then &lt;strong&gt;Environment Variables&lt;/strong&gt; to add the API keys and token for the Nexploit repeater/CLI.&lt;/li&gt;
  &lt;li&gt;In the nexploit.app, go to &lt;strong&gt;User Settings&lt;/strong&gt;, click &lt;strong&gt;Create New API Key&lt;/strong&gt;.&lt;/li&gt;
  &lt;li&gt;Add a ‘Name’ for the API key&lt;/li&gt;
  &lt;li&gt;Under ‘Choose Scopes’, select all.&lt;/li&gt;
  &lt;li&gt;Create and copy the token. This can be used in the CircleCI Platform to set up the integration.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3&gt;Get the Repeater ID&lt;/h3&gt;
&lt;ol&gt;
  &lt;li&gt;Go to &lt;strong&gt;Repeaters&lt;/strong&gt; then press &lt;strong&gt;+&lt;/strong&gt; to set up a new repeater.&lt;/li&gt;
  &lt;li&gt;Add a ‘Name’&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image9.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Newly-created Repeater ID&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image9.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Under the list of repeaters, copy the new Repeater ID you have generated.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image10.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;List of Repeaters&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image10.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The new API Key and Repeater ID can now be used to set up your CircleCI environment variables: NEXPLOIT_TOKEN, and REPEATER.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image1.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Environment variables&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image1.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Your next commit will initiate a workflow and build with CircleCI. NexPloit will run a security test against that commit.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image6.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;List of Repeaters&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image6.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As specified in the config.yaml, the environment is spun up, the environment variables are prepared, a new NexPloit security scan is started against the target, and we are polling for results.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image13.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;CircleCI build&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image13.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image13.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image13.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image13.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image13.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image13.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image13.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image13.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image13.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image13.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image13.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image13.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image13.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image13.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image13.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After a short time, NexPloit will find a medium-level issue. As we specified in the configuration file when this breakpoint is met, the build fails and the scan is set to stop. Removing this ‘Stop Scan’ step in the configuration will fail the build, but continue to run the scan against the target so that any additional vulnerabilities can be detected.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image3.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;CircleCI build&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image3.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can now look at the security scan status and results using the NexPloit dashboard to check the status.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image5.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Scan summary&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image5.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image5.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image5.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image5.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image5.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image5.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image5.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image5.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image5.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image5.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image5.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image5.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image5.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image5.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image5.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The scanner has already detected a number of automatically validated security issues on the target, ready to be fixed, without the need for any manual validation.&lt;/p&gt;

&lt;p&gt;The results provide the developer with information they need to understand the issue, how to replicate it, and how to fix it, with remediation guidelines.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image11.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Remediation guidelines&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image11.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image11.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image11.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image11.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image11.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image11.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image11.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image11.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image11.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image11.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image11.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image11.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image11.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image11.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image11.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The request, with a diff-like view (what was added/deleted) is provided, as well as the response, headers, and the body.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image12.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;CircleCI build&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image12.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image12.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image12.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image12.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image12.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image12.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image12.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image12.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image12.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image12.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image12.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image12.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image12.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image12.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image12.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;In this &lt;a href=&quot;https://www.neuralegion.com/blog/cross-site-scripting-xss/&quot;&gt;Cross-Site Scripting&lt;/a&gt; (XSS) example, there is additional evidence in the form of a screenshot as a proof of concept, so you know the vulnerability is there.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image4.png?ixlib=rb-3.2.1&amp;amp;w=2000&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&quot; alt=&quot;Request view&quot; srcset=&quot;https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=449 449w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=898 898w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1347 1347w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=720 720w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1440 1440w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2160 2160w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=779 779w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1558 1558w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2337 2337w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=750 750w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=1500 1500w,
https://production-cci-com.imgix.net/blog/media/2021-06-03-neuralegion-image4.png?ixlib=rb-3.2.1&amp;amp;auto=format&amp;amp;fit=max&amp;amp;q=60&amp;amp;ch=DPR%2CWidth%2CViewport-Width%2CSave-Data&amp;amp;w=2250 2250w&quot; sizes=&quot;(min-width: 1200px) 750px,
(min-width: 992px) 779px,
(min-width: 768px) 720px,
(min-width: 480px) 720px,
(min-width: 0px) 449px&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nexploit integrates with JIRA so a ticket can be automatically raised with each issue detected, or you can connect &lt;a href=&quot;https://circleci.com/docs/2.0/jira-plugin/&quot;&gt;JIRA and CircleCI&lt;/a&gt; with a plugin.&lt;/p&gt;

&lt;h2&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Connecting &lt;a href=&quot;https://www.neuralegion.com/products/ast/nexdast/&quot;&gt;NeuraLegion’s DAST&lt;/a&gt; AppSec scanning into your CircleCI pipeline is simple, straightforward and an automated step in your workflow. You can also continue to use your other integrations, such as ticketing systems like JIRA. NexPloit can scan your web apps or APIs (SOAP, REST, GraphQL), with the results of any vulnerabilities organized and explained in a developer-friendly way that describes vulnerabilities and how to remediate and fix them.&lt;/p&gt;

&lt;p&gt;With CircleCI and NeuraLegion, you can create end-to-end deployment pipelines in minutes that includes security testing as an integral part, without builds failing due to false alerts. The result is secure products being deployed with a streamlined CI process in place. Read about how &lt;a href=&quot;https://circleci.com/case-studies/fastlane-neuralegion/&quot;&gt;Fastlane leveraged CircleCI and NeuraLegion&lt;/a&gt; to automate developing and rolling out new features, quickly.&lt;/p&gt;

&lt;p&gt;Oliver Moradov is a VP at NeuraLegion, and an expert in Application Security Testing (DAST) automation for DevOps and DevSecOps. NeuraLegion delivers a developer focused DAST platform. Discover how you can use CircleCI and NexPloit together to automate AppSec testing in your pipelines to be secure by design. You can get started right away, by signing up for your &lt;a href=&quot;https://circleci.com/signup/&quot;&gt;CircleCI free trial&lt;/a&gt; today.&lt;/p&gt;
</description>
        
      </item>
    
      
      <item>
        <title>Clojure microservices for JavaScript developers part 3</title>
        <link>https://circleci.com/blog/clojure-microservices-for-js-devs-pt-3/</link>
        <pubDate>Mon, 26 Jul 2021 04:20:00 -0700</pubDate>
        <guid isPermaLink="true">https://circleci.com/blog/clojure-microservices-for-js-devs-pt-3/</guid>
        
          <dc:creator>Musa Barighzaai</dc:creator>
        
        
          <description>&lt;p&gt;&lt;i&gt;This series was co-written by Musa Barighzaai and Tyler Sullberg.&lt;/i&gt;&lt;/p&gt;

&lt;p&gt;This is the third and final post in a series of posts for JavaScript developers about how to set up Clojure microservices. The previous posts were:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://circleci.com/blog/clojure-microservices-for-js-devs-pt-1&quot;&gt;Thinking in JavaScript vs Thinking in Clojure&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://circleci.com/blog/clojure-microservices-for-js-devs-pt-2&quot;&gt;Creating Your First Clojure Microservice&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Those previous posts are useful context, but you can &lt;a href=&quot;https://github.com/tsully/clojure-for-js-devs&quot;&gt;clone the repo&lt;/a&gt; and jump into this post without reading them.&lt;/p&gt;

&lt;h2&gt;Using the Clojure test API&lt;/h2&gt;

&lt;p&gt;Compared to JavaScript, a convenient feature of Clojure is that it comes with a built-in unit testing library, &lt;a href=&quot;https://clojure.github.io/clojure/clojure.test-api.html&quot;&gt;clojure.test&lt;/a&gt;. In a Leinegen project by convention, you have an src directory which we know holds all the code, and for testing a test directory to separate your code from your tests. For any file under &lt;code&gt;src&lt;/code&gt; that you want to test, you create a matching file under &lt;code&gt;/test&lt;/code&gt; suffixing with &lt;code&gt;\_test&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Imagine we have a file,&lt;code&gt;adder.clj&lt;/code&gt;, in the following file structure of a Leiningen project.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;src/
├─ adder/
│  ├─ adder.clj
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To write unit tests for &lt;code&gt;adder.clj&lt;/code&gt; we would create the following test directory:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;src/
├─ adder/
│  ├─ adder.clj
test/
├─ adder/
│  ├─ adder_test.clj
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Notice how the &lt;code&gt;test&lt;/code&gt; directory mirrors our &lt;code&gt;src&lt;/code&gt; directory, and how we add a &lt;code&gt;\_test&lt;/code&gt; suffix on the file we want to test.&lt;/p&gt;

&lt;p&gt;We want to test the following function in &lt;code&gt;adder.clj&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(defn add-numbers [x y]
  (+ x y))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To write a test in &lt;code&gt;adder.clj&lt;/code&gt; for the &lt;code&gt;add-numbers&lt;/code&gt; function, you first bring in the Clojure Core testing framework.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(ns adder
  (:require [clojure.test :refer [deftest]))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Making use of the &lt;code&gt;deftest&lt;/code&gt; macro, writing tests is as easy as:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(deftest test-add-numbers
  (is (= 4 (add-numbers 2 2))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In our &lt;a href=&quot;https://github.com/tsully/clojure-for-js-devs&quot;&gt;sample project&lt;/a&gt;, we have unit tests for all our HTTP endpoint handlers. Here’s an example of one (found in test/clojure_for_js_devs/handlers_test.clj) . This is testing the handler for our &lt;code&gt;/counter&lt;/code&gt; path. The &lt;code&gt;/counter&lt;/code&gt; path adds the requester’s IP address as a key to Redis and adds 1 to the value, keeping a count of the number of times an IP has pinged &lt;code&gt;/counter&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(testing &quot;counter-handler&quot;
    (let [response &quot;Counter: 44&quot;
          req (-&amp;gt;  (ring-mock/request :get &quot;/counter&quot;))]
      (bond/with-stub! [[redis/getKey (constantly 44)] [redis/incr (constantly nil)]]
        (is (= (handlers/counter-handler req {}) response)))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;There is a lot of going on here, so let us break it down for you.&lt;/p&gt;

&lt;p&gt;First, we initialize a request object, &lt;code&gt;req&lt;/code&gt;, for the endpoint we want to test (&lt;code&gt;/counter&lt;/code&gt;). We are making use of a request mocking library that comes with ring-clojure (our HTTP server framework). This saves us time; we don’t need to write out a full request map.&lt;/p&gt;

&lt;p&gt;Next, we use the library &lt;code&gt;bond/with-stub!&lt;/code&gt;. In JavaScript the most popular testing framework is &lt;a href=&quot;https://jestjs.io/&quot;&gt;Jest&lt;/a&gt;. If you have worked with Jest before, bond gives you &lt;a href=&quot;https://jestjs.io/docs/mock-function-api&quot;&gt;similar features&lt;/a&gt;. jest.mock() lets you mock modules and also state what you want the mock function’s return value to be. That’s what &lt;code&gt;bond/with-stub&lt;/code&gt; does for us in Clojure. Since these are unit tests, we want to mock our call to Redis, specifically the keys &lt;code&gt;getKey&lt;/code&gt; and &lt;code&gt;incr&lt;/code&gt;. For &lt;code&gt;getKey&lt;/code&gt; we want to return 44 anytime it’s called in this test, and similarly, for &lt;code&gt;incr&lt;/code&gt; we want to return &lt;code&gt;nil&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Finally, we make our assertion that our call to &lt;code&gt;handlers/counter-handler&lt;/code&gt; will match our response, &lt;code&gt;Counter: 44&lt;/code&gt;. Note that the final parameter in &lt;code&gt;handlers/counter-handler&lt;/code&gt; is our Redis component, but in this test, we pass in an empty map &lt;code&gt;{}&lt;/code&gt;. Since we are stubbing our Redis calls we can pass an empty map for this parameter, because Redis won’t be required in our test.&lt;/p&gt;

&lt;p&gt;How about writing integration tests? In JavaScript, one of the useful features of Jest is the setup and teardown of tests. This feature comes in handy when writing integration tests. For example, if we had an application that queries a database of cities, you would do something like this in Jest:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;beforeAll(() =&amp;gt; {
  initializeCityDatabase();
});

afterAll(() =&amp;gt; {
  clearCityDatabase();
});

test(&quot;city database has Vienna&quot;, () =&amp;gt; {
  expect(isCity(&quot;Vienna&quot;)).toBeTruthy();
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The beforeAll/afterAll allows you to run code before and after tests.&lt;/p&gt;

&lt;p&gt;Clojure has built-in support for both test setup and teardown. It also makes use of &lt;a href=&quot;https://clojuredocs.org/clojure.test/use-fixtures&quot;&gt;fixtures&lt;/a&gt;. Here’s a full example:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(ns adder_test
  (:require [clojure.test :refer [testing use-fixtures]))

(defn my-fixture [f]
  ;; The function you want to run before all tests
  (initializeCityDatabase)

  (f)  ;;Then call the function we passed.
  ;; The function you want to run after all tests
  (clearCityDatabase)
 )
lang:clojure
(use-fixtures :once my-fixture)

(deftest city-db
  (is (= &quot;'Vienna'&quot; (IsCity))))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here we are calling use-fixtures with &lt;code&gt;:once&lt;/code&gt;, which means run my fixture only once, around all the tests in the namespace. You can also pass &lt;code&gt;:each&lt;/code&gt; to run your fixture repeatedly for each test. &lt;code&gt;use-fixtures&lt;/code&gt; here works the same as beforeAll/afterAll in Jest. We wrap our test (seen in my-fixture as (f)) with the method we want to be called before and after.&lt;/p&gt;

&lt;p&gt;You can see a full example of this in the &lt;a href=&quot;https://github.com/tsully/clojure-for-js-devs&quot;&gt;sample project&lt;/a&gt;, in &lt;code&gt;test/clojure_for_js_devs/test_core.clj&lt;/code&gt;. In &lt;a href=&quot;http://circleci.com/blog/clojure-microservices-for-js-devs-pt-2&quot;&gt;post 2&lt;/a&gt; we discussed the purpose of a &lt;code&gt;system-map&lt;/code&gt;. A system map allows our application to manage the lifecycle of each software component that it depends on. In our case, our components are our Redis connection and an HTTP server:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;(defn- test-system
  []
  (component/system-map
   :redis (redis/new-redis &quot;redis://localhost:6379&quot;)
   :http-server (component/using
                 (http/new-server &quot;localhost&quot; 0)
                 {:redis :redis})))


(defn- setup-system
  []
  (alter-var-root #'system (fn [_] (component/start (test-system)))))

(defn- tear-down-system
  []
  (alter-var-root #'system (fn [s] (when s (component/stop s)))))

(defn init-system
  [test-fn]
  (setup-system)
  (test-fn)
  (tear-down-system))
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;We have a method &lt;code&gt;setup-system&lt;/code&gt; that uses the component library (from post 1) which starts the required components (HTTP server, and Redis). In addition to &lt;code&gt;setup-system&lt;/code&gt;, we have &lt;code&gt;tear-down-system&lt;/code&gt;, which runs component/stop to shut down all components once the tests have been completed.&lt;/p&gt;

&lt;p&gt;Now, how do you run tests in Clojure? Without a test runner, you can call (run-all-tests) in your REPL to run all tests in all namespaces. Or, if you’re following along using Leiningen, you can call &lt;code&gt;lein test&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;You may have used test runners like Jest with features that run tests automatically when changes are detected in the code. The Clojure community also has various test runners with similar features. The most popular one is &lt;a href=&quot;https://github.com/lambdaisland/kaocha&quot;&gt;Kaocha&lt;/a&gt;. We’re using Kaocha in our sample project.&lt;/p&gt;

&lt;p&gt;To set up Kaocha, start by adding it as a dependency in the &lt;code&gt;project.clj&lt;/code&gt; file under your dev dependencies:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  :profiles {:uberjar {:aot :all}
                 :dev {:dependencies [[lambdaisland/kaocha &quot;1.0.829&quot;]
                                  [circleci/bond &quot;0.5.0&quot;]
                                  [ring/ring-mock]]}}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In JavaScript, you can create custom scripts for custom commands you want to run. For example, &lt;code&gt;npm run prod:ci&lt;/code&gt;. Leinegen also has this feature known as an alias. We can create an alias &lt;code&gt;test&lt;/code&gt; that loads the &lt;code&gt;lambdaisland/kaocha&lt;/code&gt; dependency.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;:aliases {&quot;kaocha&quot; [&quot;run&quot; &quot;-m&quot; &quot;kaocha.runner&quot;]}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Finally, add the Koacha configuration file. Create a &lt;code&gt;tests.edn&lt;/code&gt; file in your root project directory with the following config:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#kaocha/v1
{:kaocha/color? true}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now if you call &lt;code&gt;lein test&lt;/code&gt;, kaocha will execute the tests and report the results.&lt;/p&gt;

&lt;h2&gt;Running Clojure tests in CircleCI&lt;/h2&gt;

&lt;p&gt;If you’re looking for an introduction to the importance of continuous integration (CI), I highly recommend checking out &lt;a href=&quot;https://circleci.com/continuous-integration/&quot;&gt;https://circleci.com/continuous-integration/&lt;/a&gt;. In this section we will go over our CI workflow and how to run Clojure tests in CircleCI,&lt;/p&gt;

&lt;p&gt;In our sample project under &lt;code&gt;.circleci/config.yml&lt;/code&gt; we have a workflow for testing our project every time we push a commit to our &lt;a href=&quot;github.com/tsully/clojure-for-js-devs&quot;&gt;repo&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;version: 2.1
jobs:
  build:
    docker:
      - image: circleci/clojure:lein-2.9.5
      - image: redis:4.0.2-alpine
        command: redis-server --port 6379
    working_directory: ~/repo
    environment:
      LEIN_ROOT: &quot;true&quot;
      JVM_OPTS: -Xmx3200m
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum &quot;project.clj&quot; }}
            - v1-dependencies-
      - run: lein deps
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum &quot;project.clj&quot; }}
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz &amp;amp;&amp;amp; sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz &amp;amp;&amp;amp; rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for redis
          command: dockerize -wait tcp://localhost:6379 -timeout 1m
      - run: lein test

workflows:
  build:
    jobs:
      - build
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The &lt;code&gt;jobs&lt;/code&gt; key is where we define the jobs that can be used in our CI pipeline. Our pipeline has a single job, “build”, which will build our application and then run our tests. “Build” will use Docker images to set up our CI environment. Our Clojure application will run using a pre-built CircleCI Docker image: &lt;code&gt;circleci/clojure:lein-2.9.5&lt;/code&gt;. These images are typically extensions of official Docker images and include tools especially useful for CI/CD. In our case, &lt;code&gt;circleci/clojure:lein-2.9.5&lt;/code&gt; comes with Clojure and lein installed. We also use the Redis Docker image since our integration tests will require hitting a Redis server.&lt;/p&gt;

&lt;p&gt;Here is a review of all the steps for our “build” job:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;We first check out our code from our repo.&lt;/li&gt;
  &lt;li&gt;We then wrap the &lt;code&gt;lein deps&lt;/code&gt; call that fetches all our dependencies with caching. We don’t need to fresh install all our dependencies on every CI run, so caching will speed up our CI builds.&lt;/li&gt;
  &lt;li&gt;We then bring in Dockerize, a tool which gives our CI the ability to wait for other services to be available before running tests. In our case, we use Dockerize to wait for Redis before running our integration tests.&lt;/li&gt;
  &lt;li&gt;Finally, we run &lt;code&gt;lein test&lt;/code&gt; to run all our tests.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;We now have our CI pipeline running on every commit, automatically ensuring no one pushes a breaking change to our Clojure project.&lt;/p&gt;

&lt;p&gt;And that’s it! You now have a Clojure microservice with basic tests using a continuous integration workflow. We hope you found this series valuable and have gained the confidence to use Clojure in your next project.&lt;/p&gt;
</description>
        
      </item>
    
  </channel>
</rss>
